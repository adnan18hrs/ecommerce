{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","reducers/cartReducers.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","cartReducers","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","products","loading","page","pages","error","productDetails","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useSelector","useDispatch","Navbar","bg","expand","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","Text","as","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","detail","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","FormControl","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","required","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","ReactDOM","render","getElementById"],"mappings":"wKAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAGpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QCjCnBC,EAAgB,gBAChBC,EAAmB,mBAEnBC,EAA6B,6BAE7BC,EAA2B,2BAE3BC,EAAmB,mBCHnBC,EAAe,WAA0D,IAAzDC,EAAwD,uDAAjD,CAACC,UAAW,GAAIC,gBAAiB,IAAKC,EAAW,uCACjF,OAAOA,EAAOC,MACV,KAAKV,EACD,IAAMW,EAAOF,EAAOG,QAEdC,EAAYP,EAAMC,UAAUO,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAYL,EAAKK,WAG/D,OAAGH,EACC,2BACOP,GADP,IAEIC,UAAWD,EAAMC,UAAUU,KAAI,SAAAF,GAAC,OAAIA,EAAEC,UAAYH,EAAUG,QAAUL,EAAOI,OAKjF,2BACOT,GADP,IAEIC,UAAU,GAAD,mBAAKD,EAAMC,WAAX,CAAsBI,MAG3C,KAAKV,EACD,kCACOK,GADP,IAEIC,UAAWD,EAAMC,UAAUW,QAAO,SAAAH,GAAC,OAAIA,EAAEC,UAAYP,EAAOG,aAEpE,KAAKV,EACD,kCACOI,GADP,IAEIE,gBAAiBC,EAAOG,UAEhC,KAAKT,EACD,kCACOG,GADP,IAEIa,cAAeV,EAAOG,UAE9B,KAAKR,EACD,kCACOE,GADP,IAEIC,UAAW,KAGnB,QACI,OAAOD,I,QC/CNc,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAGlBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBCjCpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAGtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAGlBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCjB7BC,GAAUC,0BAAgB,CAG5BC,YCsB8B,WAAuC,IAAtChE,EAAqC,uDAA7B,CAAEiE,SAAU,IAAM9D,EAAW,uCACpE,OAAQA,EAAOC,MACX,KAAKlC,EAED,MAAO,CAAEgG,SAAS,EAAMD,SAAU,IACtC,KAAK9F,EACD,MAAO,CACH+F,SAAS,EACTD,SAAU9D,EAAOG,QAAQ2D,SACzBE,KAAMhE,EAAOG,QAAQ6D,KACrBC,MAAOjE,EAAOG,QAAQ8D,OAE9B,KAAKhG,EACD,MAAO,CAAE8F,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,QACI,OAAON,IDrCfsE,eC6DiC,WAAgD,IAA/CtE,EAA8C,uDAAtC,CAAEU,QAAS,CAAC6D,QAAQ,KAAOpE,EAAW,uCAChF,OAAQA,EAAOC,MACX,KAAK/B,EAED,OAAO,aAAE6F,SAAS,GAASlE,GAE/B,KAAK1B,EACD,MAAO,CAAE4F,SAAS,EAAOxD,QAASP,EAAOG,SAE7C,KAAK/B,EACD,MAAO,CAAE2F,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,QACI,OAAON,IDzEfwE,cC6EgC,WAAyB,IAAxBxE,EAAuB,uDAAf,GAAIG,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK5B,EACD,MAAO,CAAE0F,SAAS,GAEtB,KAAKzF,EACD,MAAO,CAAEyF,SAAS,EAAOO,SAAS,GAEtC,KAAK/F,EACD,MAAO,CAAEwF,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,QACI,OAAON,IDxFf0E,cCuCgC,WAAyB,IAAxB1E,EAAuB,uDAAf,GAAIG,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKzB,EACD,MAAO,CAAEuF,SAAS,GAEtB,KAAKtF,EACD,MAAO,CAAEsF,SAAS,EAAOO,SAAS,EAAM/D,QAASP,EAAOG,SAE5D,KAAKzB,EACD,MAAO,CAAEqF,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,KAAKxB,EACD,MAAO,GAEX,QACI,OAAOkB,IDrDf2E,cCgHgC,WAAsC,IAArC3E,EAAoC,uDAA5B,CAAEU,QAAS,IAAMP,EAAW,uCACrE,OAAQA,EAAOC,MACX,KAAKrB,EACD,MAAO,CAAEmF,SAAS,GAEtB,KAAKlF,EACD,MAAO,CAAEkF,SAAS,EAAOO,SAAS,EAAM/D,QAASP,EAAOG,SAE5D,KAAKrB,EACD,MAAO,CAAEiF,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,KAAKpB,EACD,MAAO,CAAEwB,QAAS,IAEtB,QACI,OAAOV,ID9Hf4E,oBC2FsC,WAAyB,IAAxB5E,EAAuB,uDAAf,GAAIG,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKjB,EACD,MAAO,CAAE+E,SAAS,GAEtB,KAAK9E,EACD,MAAO,CAAE8E,SAAS,EAAOO,SAAS,GAEtC,KAAKpF,EACD,MAAO,CAAE6E,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,KAAKhB,EACD,MAAO,GAEX,QACI,OAAOU,IDzGf6E,gBCiIkC,WAAuC,IAAtC7E,EAAqC,uDAA7B,CAAEiE,SAAU,IAAM9D,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAKb,EACD,MAAO,CAAE2E,SAAS,EAAMD,SAAU,IAEtC,KAAKzE,EACD,MAAO,CAAE0E,SAAS,EAAOD,SAAU9D,EAAOG,SAE9C,KAAKb,EACD,MAAO,CAAEyE,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,QACI,OAAON,ID3If8E,KAAK/E,EAELgF,UEc4B,WAAyB,IAAxB/E,EAAuB,uDAAf,GAAIG,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKU,EACD,MAAO,CAAEoD,SAAS,GACtB,KAAKnD,EACD,MAAO,CAAEmD,SAAS,EAAOc,SAAU7E,EAAOG,SAC9C,KAAKU,EACD,MAAO,CAAEkD,SAAS,EAAOG,MAAOlE,EAAOG,SAC3C,KAAKW,EACD,MAAO,GACX,QACI,OAAOjB,IFxBfiF,aE4B+B,WAAyB,IAAxBjF,EAAuB,uDAAf,GAAIG,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKc,EACD,MAAO,CAAEgD,SAAS,GACtB,KAAK/C,EACD,MAAO,CAAE+C,SAAS,EAAOc,SAAU7E,EAAOG,SAC9C,KAAKc,EACD,MAAO,CAAE8C,SAAS,EAAOG,MAAOlE,EAAOG,SAC3C,KAAKW,EACD,MAAO,GACX,QACI,OAAOjB,IFtCfkF,YE0C8B,WAAkC,IAAjClF,EAAgC,uDAAxB,CAAEmF,KAAK,IAAMhF,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAKiB,EACD,OAAO,2BAAKrB,GAAZ,IAAmBkE,SAAS,IAChC,KAAK5C,EACD,MAAO,CAAE4C,SAAS,EAAOiB,KAAMhF,EAAOG,SAC1C,KAAKiB,EACD,MAAO,CAAE2C,SAAS,EAAOG,MAAOlE,EAAOG,SAC3C,KAAKkB,EACD,MAAO,CAAE2D,KAAM,IACnB,QACI,OAAOnF,IFpDfoF,kBEwDoC,WAAyB,IAAxBpF,EAAuB,uDAAf,GAAIG,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAKqB,EACD,MAAO,CAAEyC,SAAS,GAEtB,KAAKxC,GAED,MAAO,CAAEwC,SAAS,EAAOO,SAAS,EAAMO,SAAU7E,EAAOG,SAE7D,KAAKqB,GACD,MAAO,CAAEuC,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,KAAKsB,GACD,MAAO,GAEX,QACI,OAAO5B,IFvEfqF,SE2E2B,WAAoC,IAAnCrF,EAAkC,uDAA1B,CAAEsF,MAAO,IAAMnF,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKyB,GACD,MAAO,CAAEqC,SAAS,GAEtB,KAAKpC,GACD,MAAO,CAAEoC,SAAS,EAAOoB,MAAOnF,EAAOG,SAE3C,KAAKyB,GACD,MAAO,CAAEmC,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,KAAK0B,GACD,MAAO,CAAEsD,MAAO,IAEpB,QACI,OAAOtF,IFzFfuF,WE8F6B,WAAyB,IAAxBvF,EAAuB,uDAAf,GAAIG,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAK6B,GACD,MAAO,CAAEiC,SAAS,GAEtB,KAAKhC,GACD,MAAO,CAAEgC,SAAS,EAAOO,SAAS,GAEtC,KAAKtC,GACD,MAAO,CAAE+B,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,QACI,OAAON,IFzGfwF,WE8G6B,WAAmC,IAAlCxF,EAAiC,uDAAzB,CAAEmF,KAAM,IAAMhF,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAKgC,GACD,MAAO,CAAE8B,SAAS,GAEtB,KAAK7B,GACD,MAAO,CAAE6B,SAAS,EAAOO,SAAS,GAEtC,KAAKnC,GACD,MAAO,CAAE4B,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,KAAKiC,GACD,MAAO,CAAE4C,KAAM,IAEnB,QACI,OAAOnF,IF3HfyF,YGF8B,WAAyB,IAAxBzF,EAAuB,uDAAf,GAAIG,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAKoC,GACD,MAAO,CAAE0B,SAAS,GACtB,KAAKzB,GACD,MAAO,CAAEyB,SAAS,EAAOO,SAAS,EAAMiB,MAAOvF,EAAOG,SAC1D,KAAKoC,GACD,MAAO,CAAEwB,SAAS,EAAOG,MAAOlE,EAAOG,SAC3C,KAAKqC,GACD,MAAO,GAEX,QACI,OAAO3C,IHTf2F,aGa+B,WAA6E,IAA5E3F,EAA2E,uDAAnE,CAAEkE,SAAS,EAAM0B,WAAY,GAAI1F,gBAAiB,IAAMC,EAAW,uCAC3G,OAAQA,EAAOC,MACX,KAAKwC,GACD,OAAO,2BAAK5C,GAAZ,IAAmBkE,SAAS,IAChC,KAAKrB,GACD,MAAO,CAAEqB,SAAS,EAAOwB,MAAOvF,EAAOG,SAC3C,KAAKwC,GACD,MAAO,CAAEoB,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,QACI,OAAON,IHtBf6F,SG0B2B,WAAyB,IAAxB7F,EAAuB,uDAAf,GAAIG,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAK2C,GACD,MAAO,CAAEmB,SAAS,GACtB,KAAKlB,GACD,MAAO,CAAEkB,SAAS,EAAOO,SAAS,GACtC,KAAKxB,GACD,MAAO,CAAEiB,SAAS,EAAOG,MAAOlE,EAAOG,SAC3C,KAAK4C,GACD,MAAO,GAEX,QACI,OAAOlD,IHrCf8F,YG2D8B,WAAqC,IAApC9F,EAAmC,uDAA3B,CAAE+F,OAAQ,IAAM5F,EAAW,uCAClE,OAAQA,EAAOC,MACX,KAAK+C,GACD,MAAO,CAAEe,SAAS,GACtB,KAAKd,GACD,MAAO,CAAEc,SAAS,EAAO6B,OAAQ5F,EAAOG,SAC5C,KAAK+C,GACD,MAAO,CAAEa,SAAS,EAAOG,MAAOlE,EAAOG,SAC3C,KAAKgD,GACD,MAAO,CAAEyC,OAAQ,IAErB,QACI,OAAO/F,IHtEfgG,UG0E4B,WAAqC,IAApChG,EAAmC,uDAA3B,CAAE+F,OAAQ,IAAM5F,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAKmD,GACD,MAAO,CAAEW,SAAS,GACtB,KAAKV,GACD,MAAO,CAAEU,SAAS,EAAO6B,OAAQ5F,EAAOG,SAC5C,KAAKmD,GACD,MAAO,CAAES,SAAS,EAAOG,MAAOlE,EAAOG,SAE3C,QACI,OAAON,IHnFfiG,aGuC+B,WAAyB,IAAxBjG,EAAuB,uDAAf,GAAIG,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKsD,GACD,MAAO,CACHQ,SAAS,GAEjB,KAAKP,GACD,MAAO,CAAEO,SAAS,EAAOO,SAAS,GACtC,KAAKb,GACD,MAAO,CAAEM,SAAS,EAAOG,MAAOlE,EAAOG,SAC3C,KAAKuD,GACD,MAAO,GAEX,QACI,OAAO7D,MHlDbkG,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAC9CG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAK7CI,GAAe,CACjB1B,KAAK,CACD7E,UAAWiG,GACXhG,gBAN2BiG,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAOtDrB,UAAU,CAAEC,SAAUuB,KAEpBE,GAAa,CAACC,KAQLC,GALDC,sBAAY9C,GAAS0C,GAAcK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,2GItBzEM,OAjCf,WACI,MAA8BC,mBAAS,IAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KAEIC,EAAUC,eAUd,OACI,gBAACC,GAAA,EAAD,CAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEP,EACAE,EAAQM,KAAR,oBAA0BR,EAA1B,YAEAE,EAAQM,KAAKN,EAAQM,KAAKN,EAAQO,SAASC,YAIhBC,QAAM,EAArC,UACI,eAACP,GAAA,EAAKQ,QAAN,CACIzH,KAAK,OACL0H,KAAK,IACLC,SAAU,SAACR,GAAD,OAAOL,EAAWK,EAAES,OAAOC,QACrCC,UAAU,oBAGd,eAACC,GAAA,EAAD,CACI/H,KAAK,SACLgI,QAAQ,kBACRF,UAAU,MAHd,wB,yDC6DCG,GAAiB,SAACC,GAAD,gDAAQ,WAAMC,EAAUC,GAAhB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLnI,KAAMiB,IAHoB,EAKMmH,IAAfxD,EALS,EAKtBD,UAAaC,SACf0D,EAAS,CACXC,QAAU,CACN,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SATZ,SAYPC,KAAMC,IAAN,qBACLT,EADK,KAEnBI,GAd0B,gBAYtBM,EAZsB,EAYtBA,KAIRT,EAAS,CACLnI,KAAMkB,EACNhB,QAAS0I,IAlBiB,kDAsB9BT,EAAS,CACLnI,KAAMmB,EACNjB,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAKE,QAC7C,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA1BkB,0DAAR,yDCdfC,OAjEf,WAEI,IACQnE,EADUoE,aAAY,SAAApJ,GAAK,OAAIA,EAAM+E,aACrCC,SAEFuD,EAAWc,cAMjB,OACI,kCACI,eAACC,GAAA,EAAD,CAAQC,GAAG,OAAOnB,QAAQ,OAAOoB,OAAO,KAAxC,SACI,gBAACC,GAAA,EAAD,WACI,eAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,eAACJ,GAAA,EAAOK,MAAR,wBAEJ,eAACL,GAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,gBAACN,GAAA,EAAOO,SAAR,CAAiBvB,GAAG,mBAApB,UACI,eAAC,GAAD,IACA,gBAACwB,GAAA,EAAD,CAAK5B,UAAU,UAAf,UAEI,eAAC,iBAAD,CAAewB,GAAG,QAAlB,SACI,gBAACI,GAAA,EAAIC,KAAL,WAAU,oBAAG7B,UAAU,yBAAvB,YAGFlD,EACE,gBAACgF,GAAA,EAAD,CAAaC,MAAOjF,EAAS8C,KAAMQ,GAAG,WAAtC,UACI,eAAC,iBAAD,CAAeoB,GAAG,WAAlB,SACI,eAACM,GAAA,EAAYE,KAAb,wBAEJ,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QAzB5B,WAClB5B,GD2BoB,SAACA,GACzBpC,aAAaiE,WAAW,YACxB7B,EAAS,CAAEnI,KAAMa,IACjBsH,EAAS,CAAEnI,KAAMoB,IACjB+G,EAAS,CAAEnI,KAAMkD,KACjBiF,EAAS,CAAEnI,KPxBiB,yBQgBI,uBAEH,eAAC,iBAAD,CAAesJ,GAAG,SAAlB,SACG,gBAACI,GAAA,EAAIC,KAAL,WAAU,oBAAG7B,UAAU,gBAAvB,aAIPlD,GAAYA,EAASqF,SAClB,gBAACL,GAAA,EAAD,CAAaC,MAAM,QAAQ3B,GAAG,aAA9B,UACI,eAAC,iBAAD,CAAeoB,GAAG,kBAAlB,SACI,eAACM,GAAA,EAAYE,KAAb,sBAGJ,eAAC,iBAAD,CAAeR,GAAG,qBAAlB,SACI,eAACM,GAAA,EAAYE,KAAb,yBAGJ,eAAC,iBAAD,CAAeR,GAAG,mBAAlB,SACI,eAACM,GAAA,EAAYE,KAAb,wC,mBC5CzBI,OAZf,WACI,OACI,kCACI,eAACb,GAAA,EAAD,UACI,eAACc,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAKtC,UAAU,mBAAf,2C,UCiCLuC,OAtCf,YAAuC,IAAtBxC,EAAqB,EAArBA,MAAOyC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAC1B,OACI,uBAAKzC,UAAU,SAAf,UACI,gCACI,oBAAG0C,MAAO,CAACD,SAAQzC,UACfD,GAAO,EAAE,cAAcA,GAAO,GAAI,uBAAuB,kBAIjE,gCACI,oBAAG2C,MAAO,CAACD,SAAQzC,UACfD,GAAO,EAAE,cAAcA,GAAO,IAAI,uBAAuB,kBAIjE,gCACI,oBAAG2C,MAAO,CAACD,SAAQzC,UACfD,GAAO,EAAE,cAAcA,GAAO,IAAI,uBAAuB,kBAIjE,gCACI,oBAAG2C,MAAO,CAACD,SAAQzC,UACfD,GAAO,EAAE,cAAcA,GAAO,IAAI,uBAAuB,kBAIjE,gCACI,oBAAG2C,MAAO,CAACD,SAAQzC,UACfD,GAAO,EAAE,cAAcA,GAAO,IAAI,uBAAuB,kBAIjE,gCAAOyC,GAAQA,QCJZG,OAzBf,YAA6B,IAAXnK,EAAU,EAAVA,QACd,OACI,gBAACoK,GAAA,EAAD,CAAM5C,UAAU,mBAAhB,UACI,eAAC,QAAD,CAAMwB,GAAE,mBAAchJ,EAAQqK,KAA9B,SACI,eAACD,GAAA,EAAKE,IAAN,CAAUC,IAAKvK,EAAQwK,UAE3B,gBAACJ,GAAA,EAAKK,KAAN,WACI,eAAC,QAAD,CAAMzB,GAAE,mBAAchJ,EAAQqK,KAA9B,SACI,eAACD,GAAA,EAAKM,MAAN,UACI,kCAAS1K,EAAQoH,WAGzB,eAACgD,GAAA,EAAKO,KAAN,CAAWC,GAAG,MAAd,SACI,sBAAKpD,UAAU,OAAf,SACI,eAAC,GAAD,CAAQD,MAAOvH,EAAQ6K,OAAQb,KAAI,UAAKhK,EAAQ8K,WAAb,YAAmCb,MAAO,gBAGrF,gBAACG,GAAA,EAAKO,KAAN,CAAWC,GAAG,KAAd,cACM5K,EAAQ+K,gB,UCJfC,OAjBf,WACI,OACI,eAACC,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACLjB,MAAO,CACHkB,OAAQ,QACRC,MAAO,QACPC,OAAQ,OACRC,QAAS,SAPjB,SAUI,uBAAM/D,UAAU,UAAhB,2B,UCJGgE,OARf,YAAuC,IAArB9D,EAAoB,EAApBA,QAAS+D,EAAW,EAAXA,SACvB,OACI,eAACC,GAAA,EAAD,CAAOhE,QAASA,EAAhB,SACK+D,K,UCqBEE,OAvBf,YAAmE,IAA/CjI,EAA8C,EAA9CA,MAAOD,EAAuC,EAAvCA,KAAuC,IAAjC8C,eAAiC,MAAvB,GAAuB,MAAnBoD,eAAmB,SAK9D,OAJIpD,IACAA,EAAUA,EAAQqF,MAAM,aAAa,GAAGA,MAAM,KAAK,IAG/ClI,EAAQ,GACZ,eAACmI,GAAA,EAAD,UACK,YAAIC,MAAMpI,GAAOqI,QAAQ9L,KAAI,SAACF,GAAD,OAC1B,eAAC,iBAAD,CAEIiJ,GAAKW,EAAD,sCAEiCpD,EAFjC,iBAEiDxG,EAAI,GAFrD,oBACawG,EADb,iBAC6BxG,EAAI,GAHzC,SAOI,eAAC8L,GAAA,EAAWrC,KAAZ,CAAiBwC,OAAQjM,EAAI,IAAM0D,EAAnC,SAA0C1D,EAAI,KANzCA,EAAI,S,oBCDhBkM,GAAe,eAAC1F,EAAD,uDAAW,GAAX,gDAAkB,WAAMsB,GAAN,kBAAAE,EAAA,sEAEtCF,EAAS,CAACnI,KAAMlC,IAFsB,SAGf4K,KAAMC,IAAN,uBAA0B9B,IAHX,gBAG9B+B,EAH8B,EAG9BA,KAERT,EAAS,CACLnI,KAAMjC,EACNmC,QAAS0I,IAPyB,gDAWtCT,EAAS,CACLnI,KAAMhC,EACNkC,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAKE,QAC7C,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAf0B,yDAAlB,uDAoBf0D,GAAqB,SAACtE,GAAD,gDAAQ,WAAMC,GAAN,kBAAAE,EAAA,sEAElCF,EAAS,CAACnI,KAAM/B,IAFkB,SAGXyK,KAAMC,IAAN,wBAA2BT,IAHhB,gBAG1BU,EAH0B,EAG1BA,KAERT,EAAS,CACLnI,KAAM9B,EACNgC,QAAS0I,IAPqB,gDAWlCT,EAAS,CACLnI,KAAM7B,EACN+B,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAKE,QAC7C,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAfsB,yDAAR,uDCOnB2D,OA/Bf,WACI,IAAMtE,EAAWc,cAEXxE,EAAkBuE,aAAY,SAAApJ,GAAK,OAAIA,EAAM6E,mBAC3CR,EAA6BQ,EAA7BR,MAAOH,EAAsBW,EAAtBX,QAASD,EAAaY,EAAbZ,SAMxB,OAJA6I,qBAAU,WACNvE,ED2EuB,yCAAM,WAAOA,GAAP,kBAAAE,EAAA,sEAE7BF,EAAS,CAAEnI,KAAMb,IAFY,SAINuJ,KAAMC,IAAN,sBAJM,gBAIrBC,EAJqB,EAIrBA,KAERT,EAAS,CACLnI,KAAMZ,EACNc,QAAS0I,IARgB,gDAY7BT,EAAS,CACLnI,KAAMX,EACNa,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAhBa,yDAAN,yDC1ExB,CAACX,IAEIrE,EAAU,eAAC,GAAD,IACZG,EACI,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IAEzB,eAAC2I,GAAA,EAAD,CAAUC,MAAM,QAAQ/E,UAAU,UAAlC,SACKjE,EAAStD,KAAI,SAAAD,GAAO,OACjB,eAACsM,GAAA,EAAS9C,KAAV,UACI,gBAAC,QAAD,CAAMR,GAAE,mBAAchJ,EAAQqK,KAA9B,UACI,eAACmC,GAAA,EAAD,CAAOjC,IAAKvK,EAAQwK,MAAOiC,IAAKzM,EAAQoH,KAAMsF,OAAK,IACnD,eAACJ,GAAA,EAASK,QAAV,CAAkBnF,UAAU,mBAA5B,SACI,gCAAKxH,EAAQoH,KAAb,MAAsBpH,EAAQ+K,MAA9B,aAJQ/K,EAAQqK,WCuBrCuC,OAtCf,YAAkC,IAAZnG,EAAW,EAAXA,QAEZoB,EAAWc,cAEXrF,EAAcoF,aAAY,SAAApJ,GAAK,OAAIA,EAAMgE,eAExCK,EAAyCL,EAAzCK,MAAOH,EAAkCF,EAAlCE,QAASD,EAAyBD,EAAzBC,SAAUE,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,MAEnC6C,EAAUE,EAAQO,SAAS6F,OAO/B,OALAT,qBAAU,WAENvE,EAASoE,GAAa1F,MACxB,CAACsB,EAAUtB,IAGT,kCACMA,GAAW,eAAC,GAAD,IACb,kDACC/C,EAAU,eAAC,GAAD,IACLG,EAAQ,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IAEjC,iCACA,eAACkG,GAAA,EAAD,UACKtG,EAAStD,KAAI,SAAAD,GAAO,OACjB,eAAC8J,GAAA,EAAD,CAAuBgD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACI,eAAC,GAAD,CAASjN,QAASA,KADZA,EAAQqK,UAK1B,eAAC,GAAD,CAAU5G,KAAMA,EAAMC,MAAOA,EAAO6C,QAASA,W,mBC6KlD2G,OA1Mf,YAA4C,IAAnBC,EAAkB,EAAlBA,MAAO1G,EAAW,EAAXA,QAC5B,EAAsBH,mBAAS,GAA/B,oBAAO8G,EAAP,KAAYC,EAAZ,KACA,EAA4B/G,mBAAS,GAArC,oBAAOuE,EAAP,KAAeyC,EAAf,KACA,EAA8BhH,mBAAS,IAAvC,oBAAOiH,EAAP,KAAgBC,EAAhB,KACM3F,EAAWc,cACX/E,EAAiB8E,aAAY,SAAApJ,GAAK,OAAIA,EAAMsE,kBAC1CJ,EAA2BI,EAA3BJ,QAASG,EAAkBC,EAAlBD,MAAO3D,EAAW4D,EAAX5D,QAGhBsE,EADUoE,aAAY,SAAApJ,GAAK,OAAIA,EAAM+E,aACrCC,SAEFJ,EAAsBwE,aAAY,SAAApJ,GAAK,OAAIA,EAAM4E,uBAE1CuJ,EAGTvJ,EAHAV,QACOkK,EAEPxJ,EAFAP,MACSgK,EACTzJ,EADAH,QA0BJ,OAvBAqI,qBAAU,WACFuB,IACAL,EAAU,GACVE,EAAW,IACX3F,EAAS,CAAEnI,KAAMd,KAErBiJ,EAASqE,GAAmBiB,EAAMS,OAAOhG,OAC3C,CAACC,EAAUsF,EAAOQ,IAiBhB,iCACI,eAAC,QAAD,CAAM3E,GAAG,IAAIxB,UAAU,qBAAvB,qBACChE,EACG,eAAC,GAAD,IACEG,EACI,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IAEzB,iCACA,gBAACkG,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,eAACP,GAAA,EAAD,CAAOjC,IAAKvK,EAAQwK,MAAOiC,IAAKzM,EAAQoH,KAAMsF,OAAK,MAEvD,eAAC5C,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,gBAACc,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,UACI,eAACmG,GAAA,EAAUrE,KAAX,UACI,8BAAKxJ,EAAQoH,SAEjB,eAACyG,GAAA,EAAUrE,KAAX,UACI,eAAC,GAAD,CAAQjC,MAAOvH,EAAQ6K,OAAQb,KAAI,UAAKhK,EAAQ8K,WAAb,YAAmCb,MAAO,cAEjF,gBAAC4D,GAAA,EAAUrE,KAAX,sBACaxJ,EAAQ+K,SAErB,gBAAC8C,GAAA,EAAUrE,KAAX,2BACkBxJ,EAAQ8N,oBAIlC,eAAChE,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,eAAC3C,GAAA,EAAD,UACI,gBAACyD,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,UACI,eAACmG,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,UACI,wCAAU9J,EAAQ+K,gBAI9B,eAAC8C,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,UACK9J,EAAQ+N,aAAe,EAAG,WAAW,sBAKjD/N,EAAQ+N,aAAe,GACpB,eAACF,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,eAACA,GAAA,EAAD,CAAKkE,GAAG,OAAOxG,UAAU,OAAzB,SACI,eAACyG,GAAA,EAAD,CACIrD,GAAG,SACHrD,MAAO6F,EACP/F,SAAU,SAACR,GAAD,OAAOwG,EAAOxG,EAAES,OAAOC,QAHrC,SAMQ,YAAIuE,MAAM9L,EAAQ+N,cAAchC,QAAQ9L,KAAI,SAACF,GAAD,OACxC,yBAAkBwH,MAAOxH,EAAE,EAA3B,SACKA,EAAE,GADMA,EAAE,eAW3C,eAAC8N,GAAA,EAAUrE,KAAX,UACI,eAACK,GAAA,EAAD,UACA,eAACpC,GAAA,EAAD,CACIgC,QAzFnB,WACrBhD,EAAQM,KAAR,gBAAsBoG,EAAMS,OAAOhG,GAAnC,gBAA6CwF,KAyFL5F,UAAU,YACV0G,SAAiC,IAAvBlO,EAAQ+N,aAClBrO,KAAK,SAJT,uCAapB,eAACmK,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,CAAKiD,GAAI,EAAT,UACI,0CAC4B,IAA3B/M,EAAQ6D,QAAQsK,QAAgB,eAAC,GAAD,CAASzG,QAAQ,OAAjB,wBAEjC,gBAACmG,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,UACK1H,EAAQ6D,QAAQ5D,KAAI,SAACmO,GAAD,OACjB,gBAACP,GAAA,EAAUrE,KAAX,WACI,kCAAS4E,EAAOhH,OAChB,eAAC,GAAD,CAAQG,MAAO6G,EAAOvD,OAAQZ,MAAM,YACpC,6BAAImE,EAAOC,UAAUC,UAAU,EAAG,MAClC,6BAAIF,EAAOb,YAJMa,EAAO/D,QAQhC,gBAACwD,GAAA,EAAUrE,KAAX,WACI,iDAECiE,GAAwB,eAAC,GAAD,IACxBE,GAAwB,eAAC,GAAD,CAASjG,QAAQ,UAAjB,8BACxBgG,GAAsB,eAAC,GAAD,CAAShG,QAAQ,SAAjB,SAA2BgG,IAEjDpJ,EACG,gBAACqC,GAAA,EAAD,CAAMC,SAxHxB,SAACC,GHyJQ,IAAC0H,EAAWH,EGxJvCvH,EAAEC,iBACFe,GHuJ4B0G,EGtJxBpB,EAAMS,OAAOhG,GHsJsBwG,EGtJlB,CACjBvD,SACA0C,WHoJuB,yCAAuB,WAAO1F,EAAUC,GAAjB,wBAAAC,EAAA,sEAElDF,EAAS,CACLnI,KAAMjB,IAHwC,EAQ9CqJ,IADaxD,EAPiC,EAO9CD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbQ,SAiB3BC,KAAMoG,KAAN,wBACFD,EADE,aAEnBH,EACApG,GApB8C,gBAiB1CM,EAjB0C,EAiB1CA,KAKRT,EAAS,CACLnI,KAAMhB,EACNkB,QAAS0I,IAxBqC,kDA8BlDT,EAAS,CACLnI,KAAMf,EACNiB,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAlCkC,0DAAvB,2DGjCS,UACI,gBAAC7B,GAAA,EAAK8H,MAAN,CAAYC,UAAU,SAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,gBAAChI,GAAA,EAAKQ,QAAN,CACIyD,GAAG,SACHrD,MAAOsD,EACPxD,SAAU,SAACR,GAAD,OAAOyG,EAAUzG,EAAES,OAAOC,QAHxC,UAKI,yBAAQA,MAAM,GAAd,uBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,2BACA,yBAAQA,MAAM,IAAd,iCAIR,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,UAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,qBACA,eAAChI,GAAA,EAAKQ,QAAN,CACIyD,GAAG,WACHgE,IAAI,IACJrH,MAAOgG,EACPlG,SAAU,SAACR,GAAD,OAAO2G,EAAW3G,EAAES,OAAOC,aAI7C,eAACE,GAAA,EAAD,CACIyG,SAAUT,EACV/N,KAAK,SACLgI,QAAQ,UAHZ,uBASI,gBAAC,GAAD,CAASA,QAAQ,OAAjB,oBAA+B,eAAC,QAAD,CAAMsB,GAAG,SAAT,mBAA/B,0CClMvC6F,GAAY,SAACjH,EAAIwF,GAAL,gDAAa,WAAMvF,EAAUC,GAAhB,kBAAAC,EAAA,sEACbK,KAAMC,IAAN,wBAA2BT,IADd,gBAC3BU,EAD2B,EAC3BA,KAEPT,EAAS,CAELnI,KAAKV,EACLY,QAAQ,CACJI,QAAQsI,EAAK+B,IACbjD,KAAKkB,EAAKlB,KACVoD,MAAMlC,EAAKkC,MACXO,MAAMzC,EAAKyC,MACXgD,aAAazF,EAAKyF,aAClBX,SAGR3H,aAAaqJ,QAAQ,YAAanJ,KAAKoJ,UAAUjH,IAAW1D,KAAK7E,YAf/B,2CAAb,yDC0GVyP,OAtGf,YAAiD,IAA5B7B,EAA2B,EAA3BA,MAAOnG,EAAoB,EAApBA,SAAUP,EAAU,EAAVA,QAC5B8H,EAAYpB,EAAMS,OAAOhG,GACzBwF,EAAMpG,EAAS6F,OAASoC,OAAOjI,EAAS6F,OAAOjB,MAAM,KAAK,IAAM,EAChE/D,EAAWc,cAGTpJ,EADKmJ,aAAY,SAAApJ,GAAK,OAAIA,EAAM8E,QAChC7E,UACR2P,QAAQC,IAAI,cAAc5P,GAE1B6M,qBAAU,WACNvE,EAASgH,GAAUN,EAAWnB,MAEhC,CAACvF,EAAU0G,EAAWnB,IAExB,IAAMgC,EAAwB,SAACxH,GAC3BC,EDDsB,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC7CD,EAAS,CACLnI,KAAOT,EACPW,QAASgI,IAGbnC,aAAaqJ,QAAQ,YAAanJ,KAAKoJ,UAAUjH,IAAW1D,KAAK7E,aCLpD8P,CAAezH,KAQ5B,OADAsH,QAAQC,IAAI,OAAO/B,GAEf,gBAACvD,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKiD,GAAI,EAAT,UACI,gDACsB,IAArBxN,EAAU4O,OACP,gBAAC,GAAD,CAASzG,QAAQ,OAAjB,gCACuB,eAAC,QAAD,CAAMsB,GAAG,IAAT,wBAGnB,eAAC6E,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,SACKnI,EAAUU,KAAI,SAAAN,GAAI,OACf,eAACkO,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,eAACP,GAAA,EAAD,CAAOjC,IAAK5K,EAAK6K,MAAOiC,IAAK9M,EAAKyH,KAAMsF,OAAK,EAAC4C,SAAO,MAEzD,eAACxF,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,gBAAC,QAAD,CAAM/D,GAAE,mBAAcrJ,EAAKK,SAA3B,cAAwCL,EAAKyH,KAA7C,SAEJ,gBAAC0C,GAAA,EAAD,CAAKiD,GAAI,EAAT,cACMpN,EAAKoL,SAEX,eAACjB,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,eAACkB,GAAA,EAAD,CACIrD,GAAG,SACHrD,MAAO6F,EACP/F,SAAU,SAACR,GAAD,OAAOgB,EAASgH,GAAUlP,EAAKK,QAASiP,OAAOpI,EAAES,OAAOC,UAHtE,SAMQ,YAAIuE,MAAMnM,EAAKoO,cAAchC,QAAQ9L,KAAI,SAACF,GAAD,OACzC,yBAAkBwH,MAAOxH,EAAE,EAA3B,SACKA,EAAE,GADMA,EAAE,UAO3B,eAAC+J,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,eAACtF,GAAA,EAAD,CACI/H,KAAK,SACLgI,QAAQ,QACR+B,QAAS,kBAAM2F,EAAsBzP,EAAKK,UAH9C,SAKI,oBAAGwH,UAAU,kCAUjD,eAACsC,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,eAAC3C,GAAA,EAAD,UACI,gBAACyD,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,UACI,gBAACmG,GAAA,EAAUrE,KAAX,WACI,6CAAejK,EAAUgQ,QAAO,SAACC,EAAK7P,GAAN,OAAe6P,EAAI7P,EAAKyN,MAAK,GAA7D,aADJ,IAEM7N,EAAUgQ,QAAO,SAACC,EAAK7P,GAAN,OAAe6P,EAAI7P,EAAKyN,IAAIzN,EAAKoL,QAAO,GAAG0E,QAAQ,MAG1E,eAAC5B,GAAA,EAAUrE,KAAX,UACI,eAAC/B,GAAA,EAAD,CACIyC,MAAO,CAACmB,MAAO,QACf3L,KAAK,SACL8H,UAAU,YACV0G,SAA+B,IAArB3O,EAAU4O,OACpB1E,QAxEJ,WACpBhD,EAAQM,KAAK,6BAkEO,8CC7Eb2I,OAZf,YAAsC,IAAbjE,EAAY,EAAZA,SACrB,OACI,eAAC1C,GAAA,EAAD,UACI,eAACc,GAAA,EAAD,CAAKrC,UAAU,4BAAf,SACI,eAACsC,GAAA,EAAD,CAAKkE,GAAI,GAAIjB,GAAI,EAAjB,SACKtB,SCyENkE,OAxEf,YAA6C,IAAtB3I,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAC7B,EAA0BH,mBAAS,IAAnC,oBAAOsJ,EAAP,KAAcC,EAAd,KACA,EAAgCvJ,mBAAS,IAAzC,oBAAOwJ,EAAP,KAAiBC,EAAjB,KAEMlI,EAAWc,cAEXqH,EAAWhJ,EAAS6F,OAAS7F,EAAS6F,OAAOjB,MAAM,KAAK,GAAK,IAE7DvH,EAAYqE,aAAY,SAAApJ,GAAK,OAAIA,EAAM+E,aACrCV,EAA6BU,EAA7BV,MAAOH,EAAsBa,EAAtBb,QAASc,EAAaD,EAAbC,SAaxB,OAXA8H,qBAAU,WACF9H,GACAmC,EAAQM,KAAKiJ,KAElB,CAACvJ,EAASnC,EAAU0L,IAQnB,gBAAC,GAAD,WACI,0CACCrM,GAAS,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IACpCH,GAAW,eAAC,GAAD,IACZ,gBAACmD,GAAA,EAAD,CAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACFe,EfjBc,SAAC+H,EAAOE,GAAR,gDAAqB,WAAMjI,GAAN,oBAAAE,EAAA,sEAEnCF,EAAS,CACLnI,KAAMU,IAEJ4H,EAAS,CACXC,QAAU,CACN,eAAgB,qBAPW,SAUZG,KAAMoG,KACzB,oBACA,CAAC,SAAWoB,EAAO,SAAWE,GAC9B9H,GAb+B,gBAU3BM,EAV2B,EAU3BA,KAKRT,EAAS,CACLnI,KAAMW,EACNT,QAAS0I,IAGb7C,aAAaqJ,QAAQ,WAAYnJ,KAAKoJ,UAAUzG,IApBb,kDAuBnCT,EAAS,CACLnI,KAAMY,EACNV,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAKE,QAC7C,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3BuB,0DAArB,sDeiBLyH,CAAML,EAAOE,KAQlB,UAEI,gBAACnJ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,4BACA,eAAChI,GAAA,EAAKQ,QAAN,CACIzH,KAAK,QACLwQ,YAAY,cACZ3I,MAAOqI,EACPvI,SAAU,SAACR,GAAD,OAAOgJ,EAAShJ,EAAES,OAAOC,aAM3C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,uBACA,eAAChI,GAAA,EAAKQ,QAAN,CACIzH,KAAK,WACLwQ,YAAY,iBACZ3I,MAAOuI,EACPzI,SAAU,SAACR,GAAD,OAAOkJ,EAAYlJ,EAAES,OAAOC,aAK9C,eAACZ,GAAA,EAAK8H,MAAN,CAAYjH,UAAU,OAAtB,SACI,eAACC,GAAA,EAAD,CAAQ/H,KAAK,SAASgI,QAAQ,UAA9B,0BAMR,eAACmC,GAAA,EAAD,CAAKrC,UAAU,OAAf,SACI,gBAACsC,GAAA,EAAD,4BACkB,eAAC,QAAD,CACVd,GAAIgH,EAAQ,6BAAyBA,GAAa,YADxC,+BCgCnBG,GA7FQ,SAAC,GAA2B,IAAzBnJ,EAAwB,EAAxBA,SAAUP,EAAc,EAAdA,QAClC,EAAwBH,mBAAS,IAAjC,oBAAOc,EAAP,KAAagJ,EAAb,KACA,EAA0B9J,mBAAS,IAAnC,oBAAOsJ,EAAP,KAAcC,EAAd,KACA,EAAgCvJ,mBAAS,IAAzC,oBAAOwJ,EAAP,KAAiBC,EAAjB,KACA,EAA8CzJ,mBAAS,IAAvD,oBAAO+J,EAAP,KAAwBC,EAAxB,KACA,EAA8BhK,mBAAS,MAAvC,oBAAOkC,EAAP,KAAgB+H,EAAhB,KAEM1I,EAAWc,cAEXpE,EAAemE,aAAY,SAACpJ,GAAD,OAAWA,EAAMiF,gBAC1Cf,EAA6Be,EAA7Bf,QAASG,EAAoBY,EAApBZ,MAAOW,EAAaC,EAAbD,SAElB0L,EAAWhJ,EAAS6F,OAAS7F,EAAS6F,OAAOjB,MAAM,KAAK,GAAK,IAEnEQ,qBAAU,WACJ9H,GACFmC,EAAQM,KAAKiJ,KAEd,CAACvJ,EAASnC,EAAU0L,IAWvB,OACE,gBAAC,GAAD,WACE,0CACCxH,GAAW,eAAC,GAAD,CAASd,QAAQ,SAAjB,SAA2Bc,IACtC7E,GAAS,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IACpCH,GAAW,eAAC,GAAD,IACZ,gBAACmD,GAAA,EAAD,CAAMC,SAfY,SAACC,GACrBA,EAAEC,iBACEgJ,IAAaO,EACfE,EAAW,0BAEX1I,EhBiBkB,SAACT,EAAMwI,EAAOE,GAAd,gDAA2B,WAAMjI,GAAN,oBAAAE,EAAA,sEAE3CF,EAAS,CACLnI,KAAMc,IAEJwH,EAAS,CACXC,QAAU,CACN,eAAgB,qBAPmB,SAUpBG,KAAMoG,KACzB,uBACA,CAAC,KAAOpH,EAAM,MAAQwI,EAAO,SAAWE,GACxC9H,GAbuC,gBAUnCM,EAVmC,EAUnCA,KAKRT,EAAS,CACLnI,KAAMe,EACNb,QAAS0I,IAEbT,EAAS,CACLnI,KAAMW,EACNT,QAAS0I,IAGb7C,aAAaqJ,QAAQ,WAAYnJ,KAAKoJ,UAAUzG,IAxBL,kDA2B3CT,EAAS,CACLnI,KAAMgB,EACNd,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAKE,QAC7C,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA/B+B,0DAA3B,sDgBjBTgI,CAASpJ,EAAMwI,EAAOE,KAU/B,UACE,gBAACnJ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACE,eAAC/H,GAAA,EAAKgI,MAAN,mBACA,eAAChI,GAAA,EAAKQ,QAAN,CACEzH,KAAK,OACLwQ,YAAY,aACZ3I,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOuJ,EAAQvJ,EAAES,OAAOC,aAItC,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACE,eAAC/H,GAAA,EAAKgI,MAAN,4BACA,eAAChI,GAAA,EAAKQ,QAAN,CACEzH,KAAK,QACLwQ,YAAY,cACZ3I,MAAOqI,EACPvI,SAAU,SAACR,GAAD,OAAOgJ,EAAShJ,EAAES,OAAOC,aAIvC,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,WAAtB,UACE,eAAC/H,GAAA,EAAKgI,MAAN,uBACA,eAAChI,GAAA,EAAKQ,QAAN,CACEzH,KAAK,WACLwQ,YAAY,iBACZ3I,MAAOuI,EACPzI,SAAU,SAACR,GAAD,OAAOkJ,EAAYlJ,EAAES,OAAOC,aAI1C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,kBAAtB,UACE,eAAC/H,GAAA,EAAKgI,MAAN,+BACA,eAAChI,GAAA,EAAKQ,QAAN,CACEzH,KAAK,WACLwQ,YAAY,mBACZ3I,MAAO8I,EACPhJ,SAAU,SAACR,GAAD,OAAOyJ,EAAmBzJ,EAAES,OAAOC,aAIjD,eAACE,GAAA,EAAD,CAAQ/H,KAAK,SAASgI,QAAQ,UAA9B,yBAKF,eAACmC,GAAA,EAAD,CAAKrC,UAAU,OAAf,SACE,gBAACsC,GAAA,EAAD,8BACmB,IACjB,eAAC,QAAD,CAAMd,GAAIgH,EAAQ,0BAAsBA,GAAa,SAArD,4B,UCkFKS,OApKf,YAAqC,IAAZhK,EAAW,EAAXA,QAErB,EAAwBH,mBAAS,IAAjC,oBAAOc,EAAP,KAAagJ,EAAb,KACA,EAA0B9J,mBAAS,IAAnC,oBAAOsJ,EAAP,KAAcC,EAAd,KACA,EAAgCvJ,mBAAS,IAAzC,oBAAOwJ,EAAP,KAAiBC,EAAjB,KACA,EAA8CzJ,mBAAS,IAAvD,oBAAO+J,EAAP,KAAwBC,EAAxB,KACA,EAA8BhK,mBAAS,IAAvC,oBAAOkC,EAAP,KAAgB+H,EAAhB,KAEM1I,EAAWc,cAEXnE,EAAckE,aAAY,SAAApJ,GAAK,OAAIA,EAAMkF,eACvCb,EAAyBa,EAAzBb,MAAOH,EAAkBgB,EAAlBhB,QAASiB,EAASD,EAATC,KAGhBH,EADUoE,aAAY,SAAApJ,GAAK,OAAIA,EAAM+E,aACrCC,SAEFc,EAAcsD,aAAY,SAAApJ,GAAK,OAAIA,EAAM8F,eAC/BsL,EAA8CtL,EAAtD5B,QAA8BmN,EAAwBvL,EAA/BzB,MAAoB0B,EAAWD,EAAXC,OAG3CtB,EADkB2E,aAAY,SAAApJ,GAAK,OAAIA,EAAMoF,qBAC7CX,QAkCR,OAhCAqI,qBAAU,WACD9H,EAGIG,GAASA,EAAK2C,OAAQrD,GAAWO,EAAS+F,MAAQ5F,EAAK4F,KAKxD+F,EAAQ3L,EAAK2C,MACbyI,EAASpL,EAAKmL,SALd/H,EAAS,CAAEnI,KAAMwB,KACjB2G,EAASF,GAAe,YACxBE,EC6HY,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLnI,KAAM+C,KAHgB,EAQtBqF,IADaxD,EAPS,EAOtBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbhB,SAiBHC,KAAMC,IAAN,wBAEnBL,GAnBsB,gBAiBlBM,EAjBkB,EAiBlBA,KAKRT,EAAS,CACLnI,KAAMgD,GACN9C,QAAS0I,IAxBa,kDA6B1BT,EAAS,CACLnI,KAAMiD,GACN/C,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAjCU,0DAAN,0DDlIhB/B,EAAQM,KAAK,YAWlB,CAACc,EAAUpB,EAASnC,EAAUG,EAAMV,IAoBnC,gBAAC8F,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKiD,GAAI,EAAT,UACI,+CAECvE,GAAW,eAAC,GAAD,CAASd,QAAQ,SAAjB,SAA2Bc,IACtC7E,GAAS,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IACpCH,GAAW,eAAC,GAAD,IACZ,gBAACmD,GAAA,EAAD,CAAMC,SAzBI,SAACC,GACnBA,EAAEC,iBACFoI,QAAQC,IAAI,UAAU/H,EAAK,YAAawI,EAAO,eAAeE,GAE1DA,IAAaO,EACbE,EAAW,2BAEX1I,EjBgEqB,SAACpD,GAAD,gDAAU,WAAMoD,EAAUC,GAAhB,wBAAAC,EAAA,sEAEnCF,EAAS,CACLnI,KAAMqB,IAHyB,EAS/B+G,IADaxD,EARkB,EAQ/BD,UAAaC,SAGX0D,EAAS,CACXC,QAAU,CACN,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAdP,SAiBZC,KAAMwI,IACzB,6BACAnM,EACAuD,GApB+B,gBAiB3BM,EAjB2B,EAiB3BA,KAKRT,EAAS,CACLnI,KAAMsB,GACNpB,QAAS0I,IAGbT,EAAS,CACLnI,KAAMW,EACNT,QAAS0I,IAEb7C,aAAaqJ,QAAQ,WAAYnJ,KAAKoJ,UAAUzG,IA/Bb,kDAmCnCT,EAAS,CACLnI,KAAMuB,GACNrB,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAKE,QAC7C,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAvCuB,0DAAV,wDiBhEZqI,CAAkB,CACvB,GAAMpM,EAAK4F,IACX,KAAQjD,EACR,MAASwI,EACT,SAAYE,KAEhBS,EAAW,MAYP,UAEI,gBAAC5J,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,mBACA,eAAChI,GAAA,EAAKQ,QAAN,CACI2J,UAAQ,EACRpR,KAAK,OACLwQ,YAAY,aACZ3I,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOuJ,EAAQvJ,EAAES,OAAOC,aAK1C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,4BACA,eAAChI,GAAA,EAAKQ,QAAN,CACI2J,UAAQ,EACRpR,KAAK,QACLwQ,YAAY,cACZ3I,MAAOqI,EACPvI,SAAU,SAACR,GAAD,OAAOgJ,EAAShJ,EAAES,OAAOC,aAK3C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,uBACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIzH,KAAK,WACLwQ,YAAY,iBACZ3I,MAAOuI,EACPzI,SAAU,SAACR,GAAD,OAAOkJ,EAAYlJ,EAAES,OAAOC,aAK9C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,+BACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIzH,KAAK,WACLwQ,YAAY,mBACZ3I,MAAO8I,EACPhJ,SAAU,SAACR,GAAD,OAAOyJ,EAAmBzJ,EAAES,OAAOC,aAKrD,eAACE,GAAA,EAAD,CAAQ/H,KAAK,SAASgI,QAAQ,UAA9B,0BAOR,gBAACoC,GAAA,EAAD,CAAKiD,GAAI,EAAT,UACI,4CACC2D,EACG,eAAC,GAAD,IACAC,EACA,eAAC,GAAD,CAASjJ,QAAQ,SAAjB,SAA2BiJ,IAE3B,gBAACI,GAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACzJ,UAAU,WAApC,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,uCACA,4CACA,0CAIR,iCACKnC,EAAOpF,KAAI,SAAA+E,GAAK,OACb,gCACI,8BAAKA,EAAMqF,MACX,8BAAKrF,EAAMqJ,UAAUC,UAAU,EAAE,MACjC,8BAAKtJ,EAAMqF,MACX,oCAAMrF,EAAMkM,cACZ,8BAAKlM,EAAMmM,OAASnM,EAAMoM,OACtB,oBAAG5J,UAAU,eAAe0C,MAAO,CAACD,MAAM,WAE9C,8BACI,eAAC,iBAAD,CAAejB,GAAE,iBAAYhE,EAAMqF,KAAnC,SACI,eAAC5C,GAAA,EAAD,CAAQD,UAAU,SAAlB,2BAVHxC,EAAMqF,oBEpGhCgH,OA/Cf,YAAwD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAE1C,OACI,gBAACrI,GAAA,EAAD,CAAK5B,UAAU,8BAAf,UACI,eAAC4B,GAAA,EAAII,KAAL,UACK8H,EACG,eAAC,iBAAD,CAAetI,GAAG,SAAlB,SACI,eAACI,GAAA,EAAIC,KAAL,sBAGA,eAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,qBAIZ,eAAC9E,GAAA,EAAII,KAAL,UACK+H,EACG,eAAC,iBAAD,CAAevI,GAAG,YAAlB,SACI,eAACI,GAAA,EAAIC,KAAL,yBAGA,eAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,wBAIZ,eAAC9E,GAAA,EAAII,KAAL,UACKgI,EACG,eAAC,iBAAD,CAAexI,GAAG,WAAlB,SACI,eAACI,GAAA,EAAIC,KAAL,wBAGA,eAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,uBAIZ,eAAC9E,GAAA,EAAII,KAAL,UACKiI,EACG,eAAC,iBAAD,CAAezI,GAAG,cAAlB,SACI,eAACI,GAAA,EAAIC,KAAL,4BAGA,eAACD,GAAA,EAAIC,KAAL,CAAU6E,UAAQ,EAAlB,+BC2CTwD,OAhFf,YAAsC,IAAZjL,EAAW,EAAXA,QAGdjH,EADKkJ,aAAY,SAAApJ,GAAK,OAAIA,EAAM8E,QAChC5E,gBAEFqI,EAAWc,cAEjB,EAA8BrC,mBAAS9G,EAAgBmS,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBtL,mBAAS9G,EAAgBqS,MAAjD,oBAAOA,EAAP,KAAaC,EAAb,KACA,EAAoCxL,mBAAS9G,EAAgBuS,YAA7D,oBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8B1L,mBAAS9G,EAAgByS,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KAQA,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAeZ,OAAK,EAACC,OAAK,IAC1B,2CACA,gBAAC5K,GAAA,EAAD,CAAMC,SAVQ,SAACC,GRWQ,IAACyB,EQV5BzB,EAAEC,iBACFe,GRS4BS,EQTC,CAAEqJ,UAASE,OAAME,aAAYE,WRSrB,SAACpK,GAC1CA,EAAS,CACLnI,KAAMR,EACNU,QAAS0I,IAGb7C,aAAaqJ,QAAQ,kBAAmBnJ,KAAKoJ,UAAUzG,OQdnD7B,EAAQM,KAAK,aAOT,UAEI,gBAACJ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,UAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,sBACA,eAAChI,GAAA,EAAKQ,QAAN,CACI2J,UAAQ,EACRpR,KAAK,OACLwQ,YAAY,gBACZ3I,MAAOoK,GAAoB,GAC3BtK,SAAU,SAACR,GAAD,OAAO+K,EAAW/K,EAAES,OAAOC,aAK7C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,mBACA,eAAChI,GAAA,EAAKQ,QAAN,CACI2J,UAAQ,EACRpR,KAAK,OACLwQ,YAAY,aACZ3I,MAAOsK,GAAc,GACrBxK,SAAU,SAACR,GAAD,OAAOiL,EAAQjL,EAAES,OAAOC,aAK1C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,aAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,0BACA,eAAChI,GAAA,EAAKQ,QAAN,CACI2J,UAAQ,EACRpR,KAAK,OACLwQ,YAAY,oBACZ3I,MAAOwK,GAA0B,GACjC1K,SAAU,SAACR,GAAD,OAAOmL,EAAcnL,EAAES,OAAOC,aAKhD,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,UAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,sBACA,eAAChI,GAAA,EAAKQ,QAAN,CACI2J,UAAQ,EACRpR,KAAK,OACLwQ,YAAY,gBACZ3I,MAAO0K,GAAoB,GAC3B5K,SAAU,SAACR,GAAD,OAAOqL,EAAWrL,EAAES,OAAOC,aAK7C,eAACE,GAAA,EAAD,CAAQ/H,KAAK,SAASgI,QAAQ,UAA9B,6BCvBDyK,OAhDf,YAAqC,IAAZ1L,EAAW,EAAXA,QAGbjH,EADKkJ,aAAY,SAAApJ,GAAK,OAAIA,EAAM8E,QAChC5E,gBAEFqI,EAAWc,cAEjB,EAA0CrC,mBAAS,UAAnD,oBAAOnG,EAAP,KAAsBiS,EAAtB,KAaA,OAVK5S,EAAgBmS,SACjBlL,EAAQM,KAAK,aAUb,gBAAC,GAAD,WACI,eAAC,GAAD,CAAeuK,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhC,gBAAC7K,GAAA,EAAD,CAAMC,SAVQ,SAACC,GTkBM,IAACyB,ESjB1BzB,EAAEC,iBACFe,GTgB0BS,EShBCnI,ETgBQ,SAAC0H,GACxCA,EAAS,CACLnI,KAAMP,EACNS,QAAS0I,IAGb7C,aAAaqJ,QAAQ,gBAAiBnJ,KAAKoJ,UAAUzG,OSrBjD7B,EAAQM,KAAK,gBAOT,UACI,gBAACJ,GAAA,EAAK8H,MAAN,WACI,eAAC9H,GAAA,EAAKgI,MAAN,CAAY/D,GAAG,SAAf,2BACA,eAACd,GAAA,EAAD,UACI,eAACnD,GAAA,EAAK0L,MAAN,CACI3S,KAAK,QACL4S,MAAM,wBACN1K,GAAG,SACHR,KAAK,gBACLmL,SAAO,EACPlL,SAAU,SAACR,GAAD,OAAOuL,EAAiBvL,EAAES,OAAOC,eAMvD,eAACE,GAAA,EAAD,CAAQ/H,KAAK,SAASgI,QAAQ,UAA9B,6BCoHD8K,OA3Jf,YAAwC,IAAZ/L,EAAW,EAAXA,QAElB1B,EAAc2D,aAAY,SAAApJ,GAAK,OAAIA,EAAMyF,eACvCC,EAA0BD,EAA1BC,MAAOrB,EAAmBoB,EAAnBpB,MAAOI,EAAYgB,EAAZhB,QAEhB8D,EAAWc,cAEXvE,EAAOsE,aAAY,SAAApJ,GAAK,OAAIA,EAAM8E,QAiCxC,OA/BAA,EAAKqO,WAAarO,EAAK7E,UAAUgQ,QAAO,SAACC,EAAK7P,GAAN,OAAe6P,EAAM7P,EAAKoL,MAAQpL,EAAKyN,MAAK,GAAGqC,QAAQ,GAC/FrL,EAAKsO,eAAiBtO,EAAKqO,WAAa,IAAM,EAAI,IAAIhD,QAAQ,GAC9DrL,EAAKuO,SAAW1D,OAAQ,KAAS7K,EAAKqO,YAAYhD,QAAQ,GAE1DrL,EAAK8M,YAAcjC,OAAO7K,EAAKqO,YAAcxD,OAAO7K,EAAKsO,eAAiBzD,OAAO7K,EAAKuO,WAAWlD,QAAQ,GAGpGrL,EAAKjE,eACNsG,EAAQM,KAAK,YAGjBqF,qBAAU,WAEFrI,IACA0C,EAAQM,KAAR,iBAAuB/B,EAAMqF,MAC7BxC,EAAS,CAAEnI,KAAMuC,QAEtB,CAAC8B,EAAS0C,IAeT,iCACI,eAAC,GAAD,CAAe6K,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,gBAAC5H,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,gBAACc,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,UACI,gBAACmG,GAAA,EAAUrE,KAAX,WACI,2CACA,+BACI,iDACCpF,EAAK5E,gBAAgBmS,QAF1B,MAEsCvN,EAAK5E,gBAAgBqS,KACtD,KACAzN,EAAK5E,gBAAgBuS,WAJ1B,IAKK,KACA3N,EAAK5E,gBAAgByS,cAI9B,gBAACpE,GAAA,EAAUrE,KAAX,WACI,iDACA,+BACI,+CACCpF,EAAKjE,oBAId,gBAAC0N,GAAA,EAAUrE,KAAX,WACI,8CAC2B,IAA1BpF,EAAK7E,UAAU4O,OAAe,eAAC,GAAD,CAASzG,QAAQ,OAAjB,gCAGvB,eAACmG,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,SACKtD,EAAK7E,UAAUU,KAAI,SAACN,EAAMiT,GAAP,OAChB,eAAC/E,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,eAACP,GAAA,EAAD,CAAOjC,IAAK5K,EAAK6K,MAAOiC,IAAK9M,EAAKyH,KAAMsF,OAAK,EAAC4C,SAAO,MAGzD,eAACxF,GAAA,EAAD,UACI,eAAC,QAAD,CAAMd,GAAE,mBAAcrJ,EAAKK,SAA3B,SAAuCL,EAAKyH,SAGhD,gBAAC0C,GAAA,EAAD,CAAKiD,GAAI,EAAT,UACKpN,EAAKyN,IADV,OACmBzN,EAAKoL,MADxB,QACoCpL,EAAKyN,IAAMzN,EAAKoL,OAAO0E,QAAQ,UAXtDmD,gBAsBjD,eAAC9I,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,eAAC3C,GAAA,EAAD,UACI,gBAACyD,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,UACI,eAACmG,GAAA,EAAUrE,KAAX,UACI,kDAGJ,eAACqE,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAO1F,EAAKqO,mBAIpB,eAAC5E,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,eAAO1F,EAAKsO,sBAIpB,eAAC7E,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,gBAACA,GAAA,EAAD,eAAO1F,EAAKuO,iBAIpB,eAAC9E,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAO1F,EAAK8M,mBAIpB,eAACrD,GAAA,EAAUrE,KAAX,UACK7F,GAAS,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,MAGzC,eAACkK,GAAA,EAAUrE,KAAX,CACShC,UAAU,WADnB,SAGI,eAACC,GAAA,EAAD,CACIyC,MAAO,CAACmB,MAAO,QACf3L,KAAK,SACLwO,SAA6B,IAAnB9J,EAAK7E,UACfkK,QAjHb,WACf5B,EJ7BmB,SAAC7C,GAAD,gDAAW,WAAO6C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLnI,KAAMoC,KAHoB,EAKIgG,IAAdxD,EALU,EAKtBD,UAAYC,SACd0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SATZ,SAaPC,KAAMoG,KAAN,mBAEnBxJ,EACAgD,GAhB0B,gBAatBM,EAbsB,EAatBA,KAMRT,EAAS,CACLnI,KAAMqC,GACNnC,QAAS0I,IAGbT,EAAS,CACLnI,KAAMN,EACNQ,QAAS0I,IAGb7C,aAAaiE,WAAW,aA7BM,kDAiC9B7B,EAAS,CACLnI,KAAMsC,GACNpC,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UArCc,0DAAX,wDI6BVqK,CAAY,CACjB3N,WAAYd,EAAK7E,UACjBC,gBAAiB4E,EAAK5E,gBACtBW,cAAeiE,EAAKjE,cACpBsS,WAAYrO,EAAKqO,WACjBC,cAAetO,EAAKsO,cACpBC,SAAUvO,EAAKuO,SACfzB,WAAY9M,EAAK8M,eAqGG,yC,SC2EjB4B,OAnNf,YAA0C,IAAnB3F,EAAkB,EAAlBA,MAAO1G,EAAW,EAAXA,QACpBsM,EAAU5F,EAAMS,OAAOhG,GACvBC,EAAWc,cAGjB,EAAgCrC,oBAAS,GAAzC,oBAAO0M,EAAP,KAAiBC,EAAjB,KAEMhO,EAAeyD,aAAY,SAAApJ,GAAK,OAAIA,EAAM2F,gBACxCD,EAA0BC,EAA1BD,MAAOrB,EAAmBsB,EAAnBtB,MAAOH,EAAYyB,EAAZzB,QAEhB2B,EAAWuD,aAAY,SAAApJ,GAAK,OAAIA,EAAM6F,YAC3B+N,EAAoC/N,EAA7C3B,QAA8B2P,EAAehO,EAAxBpB,QAEvBwB,EAAemD,aAAY,SAAApJ,GAAK,OAAIA,EAAMiG,gBAC/B6N,EAA4C7N,EAArD/B,QAAkC6P,EAAmB9N,EAA5BxB,QAGzBO,EADUoE,aAAY,SAAApJ,GAAK,OAAIA,EAAM+E,aACrCC,SAmDR,OAhDKd,GAAYG,IACbqB,EAAMyN,WAAazN,EAAME,WAAWqK,QAAO,SAACC,EAAK7P,GAAN,OAAe6P,EAAM7P,EAAKoL,MAAQpL,EAAKyN,MAAK,GAAGqC,QAAQ,IAiBtGrD,qBAAU,WLGiB,IAACxE,EKDnBtD,GACDmC,EAAQM,KAAK,WAGZ/B,GAASmO,GAAcnO,EAAMqF,MAAQ4E,OAAO8D,IAAYM,GACzDxL,EAAS,CAAEnI,KAAM8C,KACjBqF,EAAS,CAAEnI,KAAMyD,KAEjB0E,GLPoBD,EKOKmL,ELPN,yCAAQ,WAAOlL,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLnI,KAAMwC,KAHqB,EAQ3B4F,IADaxD,EAPc,EAO3BD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbX,SAiBRC,KAAMC,IAAN,sBACJT,EADI,KAEnBI,GAnB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAKRT,EAAS,CACLnI,KAAMyC,GACNvC,QAAS0I,IAxBkB,kDA6B/BT,EAAS,CACLnI,KAAM0C,GACNxC,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAjCe,0DAAR,2DKSbxD,EAAMmM,SACPmC,OAAOC,OAGRN,GAAY,GA7BA,WACpB,IAAMO,EAASC,SAASC,cAAc,UACtCF,EAAO9T,KAAO,kBACd8T,EAAOjJ,IAAM,2HACbiJ,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZX,GAAY,IAEhBQ,SAASI,KAAKC,YAAYN,GAmBlBO,MAKT,CAAClM,EAAU7C,EAAO+N,EAASI,EAAYE,IAWnC7P,EACH,eAAC,GAAD,IACAG,EACA,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IAEnB,iCACI,0CAAYqB,EAAMgP,MAClB,gBAACnK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,gBAACc,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,UACI,gBAACmG,GAAA,EAAUrE,KAAX,WACI,2CACA,+BAAG,6CAAH,IAA4BxE,EAAMP,KAAK2C,QACvC,+BAAG,8CAAwB,oBAAG6M,KAAI,iBAAYjP,EAAMP,KAAKmL,OAA9B,SAAwC5K,EAAMP,KAAKmL,WAC9E,+BACI,iDACC5K,EAAMxF,gBAAgBmS,QAF3B,MAEuC3M,EAAMxF,gBAAgBqS,KACxD,KACA7M,EAAMxF,gBAAgBuS,WAJ3B,IAKK,KACA/M,EAAMxF,gBAAgByS,WAG1BjN,EAAMkP,YACH,gBAAC,GAAD,CAASxM,QAAQ,UAAjB,0BAAyC1C,EAAMmP,eAE3C,eAAC,GAAD,CAASzM,QAAQ,UAAjB,8BAIZ,gBAACmG,GAAA,EAAUrE,KAAX,WACI,iDACA,+BACI,+CACCxE,EAAM7E,iBAEV6E,EAAMmM,OACH,gBAAC,GAAD,CAASzJ,QAAQ,UAAjB,qBAAoC1C,EAAMoM,UAEtC,eAAC,GAAD,CAAS1J,QAAQ,UAAjB,yBAKZ,gBAACmG,GAAA,EAAUrE,KAAX,WACI,8CAC6B,IAA5BxE,EAAME,WAAWiJ,OAAe,eAAC,GAAD,CAASzG,QAAQ,OAAjB,4BAGzB,eAACmG,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,SACK1C,EAAME,WAAWjF,KAAI,SAACN,EAAMiT,GAAP,OAClB,eAAC/E,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,eAACP,GAAA,EAAD,CAAOjC,IAAK5K,EAAK6K,MAAOiC,IAAK9M,EAAKyH,KAAMsF,OAAK,EAAC4C,SAAO,MAGzD,eAACxF,GAAA,EAAD,UACI,eAAC,QAAD,CAAMd,GAAE,mBAAcrJ,EAAKK,SAA3B,SAAuCL,EAAKyH,SAGhD,gBAAC0C,GAAA,EAAD,CAAKiD,GAAI,EAAT,UACKpN,EAAKyN,IADV,OACmBzN,EAAKoL,MADxB,QACoCpL,EAAKyN,IAAMzN,EAAKoL,OAAO0E,QAAQ,UAXtDmD,gBAsBjD,eAAC9I,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACI,gBAAC3C,GAAA,EAAD,WACI,gBAACyD,GAAA,EAAD,CAAWnG,QAAQ,QAAnB,UACI,eAACmG,GAAA,EAAUrE,KAAX,UACI,kDAGJ,eAACqE,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAO9E,EAAMyN,mBAIrB,eAAC5E,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,eAAO9E,EAAM0N,sBAIrB,eAAC7E,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,gBAACA,GAAA,EAAD,eAAO9E,EAAM2N,iBAIrB,eAAC9E,GAAA,EAAUrE,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAO9E,EAAMkM,oBAKnBlM,EAAMmM,QACJ,gBAACtD,GAAA,EAAUrE,KAAX,WACK0J,GAAc,eAAC,GAAD,IAEbF,EAGM,eAAC,gBAAD,CACIoB,OAAQpP,EAAMkM,WACdmD,UA9HtB,SAACC,GAC3BzM,ELkBgB,SAACD,EAAI0M,GAAL,gDAAuB,WAAOzM,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvCF,EAAS,CACLnI,KAAM2C,KAH6B,EAQnCyF,IADaxD,EAPsB,EAOnCD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbH,SAiBhBC,KAAMwI,IAAN,sBACJhJ,EADI,SAEnB0M,EACAtM,GApBmC,gBAiB/BM,EAjB+B,EAiB/BA,KAMRT,EAAS,CACLnI,KAAM4C,GACN1C,QAAS0I,IAzB0B,kDA6BvCT,EAAS,CACLnI,KAAM6C,GACN3C,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAjCuB,0DAAvB,wDKlBP+L,CAASxB,EAASuB,OAyHa,eAAC,GAAD,UAUflB,GAAkB,eAAC,GAAD,IAClB9O,GAAYA,EAASqF,SAAW3E,EAAMmM,SAAWnM,EAAMkP,aACpD,eAACrG,GAAA,EAAUrE,KAAX,UACI,eAAC/B,GAAA,EAAD,CACI/H,KAAK,SACL8H,UAAU,gBACViC,QAtIjB,WACnB5B,ELoDoB,SAAC7C,GAAD,gDAAW,WAAO6C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLnI,KAAMsD,KAHqB,EAQ3B8E,IADaxD,EAPc,EAO3BD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbX,SAiBRC,KAAMwI,IAAN,sBACJ5L,EAAMqF,IADF,aAEnB,GACArC,GApB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAMRT,EAAS,CACLnI,KAAMuD,GACNrD,QAAS0I,IAzBkB,kDA6B/BT,EAAS,CACLnI,KAAMwD,GACNtD,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAjCe,0DAAX,wDKpDXgM,CAAaxP,KAkIU,6CCnHzByP,OAlFf,YAAsC,IAAZhO,EAAW,EAAXA,QAEhBoB,EAAWc,cAEXhE,EAAW+D,aAAY,SAAApJ,GAAK,OAAIA,EAAMqF,YACpCnB,EAA0BmB,EAA1BnB,QAASG,EAAiBgB,EAAjBhB,MAAOiB,EAAUD,EAAVC,MAGhBN,EADUoE,aAAY,SAAApJ,GAAK,OAAIA,EAAM+E,aACrCC,SAGSoQ,EADEhM,aAAY,SAAApJ,GAAK,OAAIA,EAAMuF,cACtCd,QAGRqI,qBAAU,WACF9H,GAAYA,EAASqF,QACrB9B,ExB2Ia,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvBF,EAAS,CACLnI,KAAMyB,KAHa,EAQnB2G,IADaxD,EAPM,EAOnBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbnB,SAiBAC,KAAMC,IAAN,cAEnBL,GAnBmB,gBAiBfM,EAjBe,EAiBfA,KAKRT,EAAS,CACLnI,KAAM0B,GACNxB,QAAS0I,IAxBU,kDA6BvBT,EAAS,CACLnI,KAAM2B,GACNzB,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAjCO,0DAAN,yDwBzIb/B,EAAQM,KAAK,YAGlB,CAACc,EAAUpB,EAASiO,EAAepQ,IAGtC,IAAMqQ,EAAgB,SAAC/M,GAEf0L,OAAOsB,QAAQ,+CACf/M,ExBsKc,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLnI,KAAM6B,KAHgB,EAQtBuG,IADaxD,EAPS,EAOtBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbhB,SAiBHC,KAAMyM,OAAN,4BACEjN,EADF,KAEnBI,GAnBsB,gBAiBlBM,EAjBkB,EAiBlBA,KAKRT,EAAS,CACLnI,KAAM8B,GACN5B,QAAS0I,IAxBa,kDA6B1BT,EAAS,CACLnI,KAAM+B,GACN7B,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAjCU,0DAAR,wDwBtKLsM,CAAWlN,KAI5B,OACI,iCACI,wCACCpE,EACM,eAAC,GAAD,IACDG,EACK,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IAE1B,gBAACoN,GAAA,EAAD,CAAOC,SAAO,EAAC+D,UAAQ,EAACC,OAAK,EAAC/D,YAAU,EAACzJ,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,wCACA,6BAIR,iCACK5C,EAAM3E,KAAI,SAAAwE,GAAI,OACX,gCACI,8BAAKA,EAAK4F,MACV,8BAAK5F,EAAK2C,OACV,8BAAK3C,EAAKmL,QACV,8BAAKnL,EAAKkF,QACN,oBAAGnC,UAAU,eAAe0C,MAAO,CAAED,MAAO,WAExC,oBAAGzC,UAAU,eAAe0C,MAAO,CAAED,MAAO,WAGpD,gCACI,eAAC,iBAAD,CAAejB,GAAE,sBAAiBvE,EAAK4F,IAAtB,SAAjB,SACI,eAAC5C,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAIrB,eAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASiC,QAAS,kBAAMkL,EAAclQ,EAAK4F,MAA9E,SACI,oBAAG7C,UAAU,wBAlBhB/C,EAAK4F,iBCmDnC4K,OArGf,YAA6C,IAAnB9H,EAAkB,EAAlBA,MAAO1G,EAAW,EAAXA,QAEvByO,EAAS/H,EAAMS,OAAOhG,GAE5B,EAAwBtB,mBAAS,IAAjC,oBAAOc,EAAP,KAAagJ,EAAb,KACA,EAA0B9J,mBAAS,IAAnC,oBAAOsJ,EAAP,KAAcC,EAAd,KACA,EAA8BvJ,oBAAS,GAAvC,oBAAOqD,EAAP,KAAgBwL,EAAhB,KAEMtN,EAAWc,cAEXnE,EAAckE,aAAY,SAAApJ,GAAK,OAAIA,EAAMkF,eACvCb,EAAyBa,EAAzBb,MAAOH,EAAkBgB,EAAlBhB,QAASiB,EAASD,EAATC,KAElBK,EAAa4D,aAAY,SAAApJ,GAAK,OAAIA,EAAMwF,cAC/BsQ,EAAgEtQ,EAAvEnB,MAA6B0R,EAA0CvQ,EAAnDtB,QAAiC8R,EAAkBxQ,EAA3Bf,QA0BpD,OAxBAqI,qBAAU,WAGFkJ,GACAzN,EAAS,CAAEnI,KAAMmC,KACjB4E,EAAQM,KAAK,oBAGRtC,EAAK2C,MAAQ3C,EAAK4F,MAAQ4E,OAAOiG,IAGlC9E,EAAQ3L,EAAK2C,MACbyI,EAASpL,EAAKmL,OACduF,EAAW1Q,EAAKkF,UAJhB9B,EAASF,GAAeuN,MAQjC,CAACzQ,EAAMyQ,EAAQI,EAAe7O,IAQ7B,iCACI,eAAC,QAAD,CAAMuC,GAAG,kBAAT,qBAIA,gBAAC,GAAD,WACI,4CACCqM,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAAS1N,QAAQ,SAAjB,SAA2B0N,IAE1C5R,EAAU,eAAC,GAAD,IAAaG,EAAQ,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IAEnD,gBAACgD,GAAA,EAAD,CAAMC,SAlBJ,SAACC,GACnBA,EAAEC,iBACFe,EzBgMkB,SAACpD,GAAD,gDAAU,WAAOoD,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5BF,EAAS,CACLnI,KAAMgC,KAHkB,EAQxBoG,IADaxD,EAPW,EAOxBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbd,SAiBLC,KAAMwI,IAAN,4BACEnM,EAAK4F,IADP,KAEnB5F,EACAuD,GApBwB,gBAiBpBM,EAjBoB,EAiBpBA,KAMRT,EAAS,CACLnI,KAAMiC,KAGVkG,EAAS,CACLnI,KAAMkB,EACNhB,QAAS0I,IA7Be,kDAkC5BT,EAAS,CACLnI,KAAMkC,GACNhC,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAtCY,0DAAV,wDyBhMT+M,CAAW,CAAElL,IAAK5F,EAAK4F,IAAKjD,OAAMwI,QAAOjG,cAgBlC,UAEI,gBAAChD,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,mBACA,eAAChI,GAAA,EAAKQ,QAAN,CAEIzH,KAAK,OACLwQ,YAAY,aACZ3I,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOuJ,EAAQvJ,EAAES,OAAOC,aAK1C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,4BACA,eAAChI,GAAA,EAAKQ,QAAN,CACIzH,KAAK,QACLwQ,YAAY,cACZ3I,MAAOqI,EACPvI,SAAU,SAACR,GAAD,OAAOgJ,EAAShJ,EAAES,OAAOC,aAK3C,eAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,UAAtB,SACI,eAAC/H,GAAA,EAAK0L,MAAN,CACI3S,KAAK,WACL4S,MAAM,WACNC,QAAS5I,EACTtC,SAAU,SAACR,GAAD,OAAOsO,EAAWtO,EAAES,OAAOiL,cAK7C,eAAC9K,GAAA,EAAD,CAAQ/H,KAAK,SAASgI,QAAQ,UAA9B,8BC2Bb8N,OAnHf,YAAgD,IAAnB/O,EAAkB,EAAlBA,QAEnBoB,GAFqC,EAATsF,MAEjBxE,eAEXrF,EAAcoF,aAAY,SAAApJ,GAAK,OAAIA,EAAMgE,eACvCE,EAA0CF,EAA1CE,QAASG,EAAiCL,EAAjCK,MAAOJ,EAA0BD,EAA1BC,SAAUG,EAAgBJ,EAAhBI,MAAOD,EAASH,EAATG,KAEnCK,EAAgB4E,aAAY,SAAApJ,GAAK,OAAIA,EAAMwE,iBAChC2R,EAA8D3R,EAAvEN,QAA+BkS,EAAwC5R,EAA/CH,MAA6B+Q,EAAkB5Q,EAA3BC,QAE9CC,EAAgB0E,aAAY,SAAApJ,GAAK,OAAIA,EAAM0E,iBAChC2R,EAAuF3R,EAAhGR,QAA+BoS,EAAiE5R,EAAxEL,MAA6BkS,EAA2C7R,EAApDD,QAAiC+R,EAAmB9R,EAA5BhE,QAIpEsE,EADUoE,aAAY,SAAApJ,GAAK,OAAIA,EAAM+E,aACrCC,SAEJiC,EAAUE,EAAQO,SAAS6F,OAC/BT,qBAAU,WACNvE,EAAS,CAAEnI,KAAMtB,IAEZkG,EAASqF,SACVlD,EAAQM,KAAK,UAGb8O,EACApP,EAAQM,KAAR,yBAA+B+O,EAAezL,IAA9C,UAEAxC,EAASoE,GAAa1F,MAG3B,CAACsB,EAAUpB,EAASnC,EAAUoQ,EAAemB,EAAeC,EAAgBvP,IAG/E,IAAMoO,EAAgB,SAAC/M,GAEf0L,OAAOsB,QAAQ,kDACf/M,ElB4GiB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE7BF,EAAS,CACLnI,KAAM5B,IAHmB,EAQzBgK,IADaxD,EAPY,EAOzBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbb,SAiBNC,KAAMyM,OAAN,+BACKjN,EADL,KAEnBI,GAnByB,cAiBrBM,KAKRT,EAAS,CACLnI,KAAM3B,IAvBmB,kDA4B7B8J,EAAS,CACLnI,KAAM1B,EACN4B,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAhCa,0DAAR,wDkB5GRuN,CAAcnO,KAQ/B,OACI,iCACI,gBAACiC,GAAA,EAAD,CAAKrC,UAAU,qBAAf,UACI,eAACsC,GAAA,EAAD,UACI,6CAGJ,eAACA,GAAA,EAAD,CAAKtC,UAAU,aAAf,SACI,gBAACC,GAAA,EAAD,CAAQD,UAAU,OAAOiC,QAZZ,WACzB5B,ElBAqB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACLnI,KAAMzB,IAHiB,EAQvB6J,IADaxD,EAPU,EAOvBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbf,SAiBJC,KAAMoG,KAAN,wBAEnB,GACAxG,GApBuB,gBAiBnBM,EAjBmB,EAiBnBA,KAKRT,EAAS,CACLnI,KAAMxB,EACN0B,QAAS0I,IAxBc,kDA6B3BT,EAAS,CACLnI,KAAMvB,EACNyB,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAjCW,0DAAN,0DkBWT,UACI,oBAAGhB,UAAU,gBADjB,0BAMPiO,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAShO,QAAQ,SAAjB,SAA2BgO,IAG1CC,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASlO,QAAQ,SAAjB,SAA2BkO,IAE1CpS,EACM,eAAC,GAAD,IACDG,EACK,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IAE1B,iCACI,gBAACoN,GAAA,EAAD,CAAOC,SAAO,EAAC+D,UAAQ,EAACC,OAAK,EAAC/D,YAAU,EAACzJ,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,2CACA,wCACA,6BAIR,iCACKjE,EAAStD,KAAI,SAAAD,GAAO,OACjB,gCACI,8BAAKA,EAAQqK,MACb,8BAAKrK,EAAQoH,OACb,oCAAMpH,EAAQ+K,SACd,8BAAK/K,EAAQgW,WACb,8BAAKhW,EAAQiW,QAEb,gCACI,eAAC,iBAAD,CAAejN,GAAE,yBAAoBhJ,EAAQqK,IAA5B,SAAjB,SACI,eAAC5C,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAIrB,eAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASiC,QAAS,kBAAMkL,EAAc3U,EAAQqK,MAAjF,SACI,oBAAG7C,UAAU,wBAfhBxH,EAAQqK,aAsB7B,eAAC,GAAD,CAAU3G,MAAOA,EAAOD,KAAMA,EAAMkG,SAAS,WCqG1DuM,OA/Mf,YAAgD,IAAnB/I,EAAkB,EAAlBA,MAAO1G,EAAW,EAAXA,QAE1B8H,EAAYpB,EAAMS,OAAOhG,GAE/B,EAAwBtB,mBAAS,IAAjC,oBAAOc,EAAP,KAAagJ,EAAb,KACA,EAA0B9J,mBAAS,GAAnC,oBAAOyE,EAAP,KAAcoL,EAAd,KACA,EAA0B7P,mBAAS,IAAnC,oBAAOkE,EAAP,KAAc4L,EAAd,KACA,EAA0B9P,mBAAS,IAAnC,oBAAO2P,EAAP,KAAcI,EAAd,KACA,EAAgC/P,mBAAS,IAAzC,oBAAO0P,EAAP,KAAiBM,EAAjB,KACA,EAAwChQ,mBAAS,GAAjD,oBAAOyH,EAAP,KAAqBwI,EAArB,KACA,EAAsCjQ,mBAAS,IAA/C,oBAAOwH,EAAP,KAAoB0I,EAApB,KACA,EAAkClQ,oBAAS,GAA3C,oBAAOmQ,EAAP,KAAkBC,EAAlB,KAEM7O,EAAWc,cAEX/E,EAAiB8E,aAAY,SAAApJ,GAAK,OAAIA,EAAMsE,kBAC1CD,EAA4BC,EAA5BD,MAAOH,EAAqBI,EAArBJ,QAASxD,EAAY4D,EAAZ5D,QAElBiE,EAAgByE,aAAY,SAAApJ,GAAK,OAAIA,EAAM2E,iBAClCmR,EAAgEnR,EAAvEN,MAA6B0R,EAA0CpR,EAAnDT,QAAiC8R,EAAkBrR,EAA3BF,QAGpDqI,qBAAU,WAEFkJ,GACAzN,EAAS,CAAEnI,KAAMlB,IACjBiI,EAAQM,KAAK,uBAER/G,EAAQoH,MAAQpH,EAAQqK,MAAQ4E,OAAOV,IAGxC6B,EAAQpQ,EAAQoH,MAChB+O,EAASnW,EAAQ+K,OACjBqL,EAASpW,EAAQwK,OACjB6L,EAASrW,EAAQiW,OACjBK,EAAYtW,EAAQgW,UACpBO,EAAgBvW,EAAQ+N,cACxByI,EAAexW,EAAQ8N,cARvBjG,EAASqE,GAAmBqC,MAerC,CAAC1G,EAAU7H,EAASuO,EAAW9H,EAAS6O,IAE3C,IAeMqB,EAAiB,yCAAG,WAAO9P,GAAP,wBAAAkB,EAAA,6DAChB6O,EAAO/P,EAAES,OAAOuP,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAczI,GAE9BmI,GAAa,GAPS,SAUZ1O,EAAS,CACXC,QAAS,CACL,eAAgB,wBAZN,SAgBKG,KAAMoG,KAAK,wBAAyBsI,EAAU9O,GAhBnD,gBAgBVM,EAhBU,EAgBVA,KAGR8N,EAAS9N,GACToO,GAAa,GApBK,kDAuBlBA,GAAa,GAvBK,0DAAH,sDA2BvB,OACI,iCACI,eAAC,QAAD,CAAM1N,GAAG,qBAAT,qBAIA,gBAAC,GAAD,WACI,+CACCqM,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAAS1N,QAAQ,SAAjB,SAA2B0N,IAE1C5R,EAAU,eAAC,GAAD,IAAaG,EAAQ,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IAEnD,gBAACgD,GAAA,EAAD,CAAMC,SAvDJ,SAACC,GACnBA,EAAEC,iBAEFe,EnBkDqB,SAAC7H,GAAD,gDAAa,WAAO6H,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACLnI,KAAMrB,IAHwB,EAQ9ByJ,IADaxD,EAPiB,EAO9BD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAbR,SAiBXC,KAAMwI,IAAN,+BACK5Q,EAAQqK,IADb,KAEnBrK,EACAgI,GApB8B,gBAiB1BM,EAjB0B,EAiB1BA,KAKRT,EAAS,CACLnI,KAAMpB,EACNsB,QAAS0I,IAIbT,EAAS,CACLnI,KAAM9B,EACNgC,QAAS0I,IA9BqB,kDAmClCT,EAAS,CACLnI,KAAMnB,EACNqB,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAvCkB,0DAAb,wDmBlDZyO,CAAc,CACnB5M,IAAKkE,EACLnH,OACA2D,QACAP,QACAyL,QACAD,WACAjI,eACAD,kBA4CY,UAEI,gBAACnH,GAAA,EAAK8H,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,CAAYzE,MAAO,CAAC,cAAe,QAAnC,kBACA,eAACvD,GAAA,EAAKQ,QAAN,CAEIzH,KAAK,OACLwQ,YAAY,aACZ3I,MAAOH,EACPC,SAAU,SAACR,GAAD,OAAOuJ,EAAQvJ,EAAES,OAAOC,aAK1C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,CAAYzE,MAAO,CAAC,cAAe,QAAnC,mBACA,eAACvD,GAAA,EAAKQ,QAAN,CAEIzH,KAAK,SACLwQ,YAAY,cACZ3I,MAAOwD,EACP1D,SAAU,SAACR,GAAD,OAAOsP,EAAStP,EAAES,OAAOC,aAM3C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,CAAYzE,MAAO,CAAC,cAAe,QAAnC,mBACA,eAACvD,GAAA,EAAKQ,QAAN,CAEIzH,KAAK,OACLwQ,YAAY,cACZ3I,MAAOiD,EACPnD,SAAU,SAACR,GAAD,OAAOuP,EAASvP,EAAES,OAAOC,UAIvC,eAACZ,GAAA,EAAKuQ,KAAN,CACItP,GAAG,aACH0K,MAAM,cACN6E,QAAM,EACN9P,SAAUsP,IAIbF,GAAa,eAAC,GAAD,OAKlB,gBAAC9P,GAAA,EAAK8H,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,CAAYzE,MAAO,CAAC,cAAe,QAAnC,mBACA,eAACvD,GAAA,EAAKQ,QAAN,CAEIzH,KAAK,OACLwQ,YAAY,cACZ3I,MAAO0O,EACP5O,SAAU,SAACR,GAAD,OAAOwP,EAASxP,EAAES,OAAOC,aAK3C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,eAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,CAAYzE,MAAO,CAAC,cAAe,QAAnC,mBACA,eAACvD,GAAA,EAAKQ,QAAN,CAEIzH,KAAK,SACLwQ,YAAY,cACZ3I,MAAOwG,EACP1G,SAAU,SAACR,GAAD,OAAO0P,EAAgB1P,EAAES,OAAOC,aAKlD,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,CAAYzE,MAAO,CAAC,cAAe,QAAnC,sBACA,eAACvD,GAAA,EAAKQ,QAAN,CACIzH,KAAK,OACLwQ,YAAY,iBACZ3I,MAAOyO,EACP3O,SAAU,SAACR,GAAD,OAAOyP,EAAYzP,EAAES,OAAOC,aAK9C,gBAACZ,GAAA,EAAK8H,MAAN,CAAYC,UAAU,cAAtB,UACI,eAAC/H,GAAA,EAAKgI,MAAN,CAAYzE,MAAO,CAAC,cAAe,QAAnC,yBACA,eAACvD,GAAA,EAAKQ,QAAN,CACIzH,KAAK,OACLwQ,YAAY,oBACZ3I,MAAOuG,EACPzG,SAAU,SAACR,GAAD,OAAO2P,EAAe3P,EAAES,OAAOC,aAIjD,eAACE,GAAA,EAAD,CAAQ/H,KAAK,SAASgI,QAAQ,UAA9B,8BCtHb0P,OAnFf,YAAuC,IAAZ3Q,EAAW,EAAXA,QAEjBoB,EAAWc,cAEXrD,EAAYoD,aAAY,SAAApJ,GAAK,OAAIA,EAAMgG,aACrC9B,EAA2B8B,EAA3B9B,QAASG,EAAkB2B,EAAlB3B,MAAO0B,EAAWC,EAAXD,OAGhBf,EADUoE,aAAY,SAAApJ,GAAK,OAAIA,EAAM+E,aACrCC,SAcR,OAVA8H,qBAAU,WACF9H,GAAYA,EAASqF,QACrB9B,EVqLc,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACLnI,KAAMmD,KAHc,EAQpBiF,IADaxD,EAPO,EAOpBD,UAAaC,SAGX0D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY5D,EAAS6D,SAblB,SAiBDC,KAAMC,IAAN,eAEnBL,GAnBoB,gBAiBhBM,EAjBgB,EAiBhBA,KAKRT,EAAS,CACLnI,KAAMoD,GACNlD,QAAS0I,IAxBW,kDA6BxBT,EAAS,CACLnI,KAAMqD,GACNnD,QAAS,KAAM2I,UAAY,KAAMA,SAASD,KAAK+D,OACzC,KAAM9D,SAASD,KAAK+D,OACpB,KAAM7D,UAjCQ,0DAAN,yDUnLd/B,EAAQM,KAAK,YAGlB,CAACc,EAAUpB,EAASnC,IAInB,iCACI,yCACCd,EACM,eAAC,GAAD,IACDG,EACK,eAAC,GAAD,CAAS+D,QAAQ,SAAjB,SAA2B/D,IAE1B,gBAACoN,GAAA,EAAD,CAAOC,SAAO,EAAC+D,UAAQ,EAACC,OAAK,EAAC/D,YAAU,EAACzJ,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAIR,iCACKnC,EAAOpF,KAAI,SAAA+E,GAAK,OACb,gCACI,8BAAKA,EAAMqF,MACX,8BAAKrF,EAAMP,MAAQO,EAAMP,KAAK2C,OAC9B,8BAAKpC,EAAMqJ,UAAUC,UAAU,EAAG,MAClC,oCAAMtJ,EAAMkM,cAEZ,8BAAKlM,EAAMmM,OACPnM,EAAMoM,OAAO9C,UAAU,EAAG,IAEtB,oBAAG9G,UAAU,eAAe0C,MAAO,CAAED,MAAO,WAIpD,8BAAKjF,EAAMkP,YACPlP,EAAMmP,YAAY7F,UAAU,EAAG,IAE3B,oBAAG9G,UAAU,eAAe0C,MAAO,CAAED,MAAO,WAIpD,8BACI,eAAC,iBAAD,CAAejB,GAAE,iBAAYhE,EAAMqF,KAAnC,SACI,eAAC5C,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BAtBHxC,EAAMqF,iBCFpCgN,OA/Bf,WACE,OACE,gBAAC,cAAD,WACE,eAAC,GAAD,IACA,uBAAM7P,UAAU,OAAhB,SACE,gBAACuB,GAAA,EAAD,WACE,eAAC,KAAD,CAAOuO,KAAK,IAAIC,UAAW3K,GAAY4K,OAAK,IAC5C,eAAC,KAAD,CAAOF,KAAK,SAASC,UAAW5H,GAAa6H,OAAK,IAClD,eAAC,KAAD,CAAOF,KAAK,YAAYC,UAAWpH,GAAgBqH,OAAK,IACxD,eAAC,KAAD,CAAOF,KAAK,WAAWC,UAAW9G,GAAe+G,OAAK,IACtD,eAAC,KAAD,CAAOF,KAAK,YAAYC,UAAW7F,GAAgB8F,OAAK,IACxD,eAAC,KAAD,CAAOF,KAAK,WAAWC,UAAWpF,GAAeqF,OAAK,IACtD,eAAC,KAAD,CAAOF,KAAK,cAAcC,UAAW/E,GAAkBgF,OAAK,IAC5D,eAAC,KAAD,CAAOF,KAAK,aAAaC,UAAWzE,GAAa0E,OAAK,IACtD,eAAC,KAAD,CAAOF,KAAK,eAAeC,UAAWrK,GAAesK,OAAK,IAC1D,eAAC,KAAD,CAAOF,KAAK,aAAaC,UAAWvI,GAAYwI,OAAK,IAErD,eAAC,KAAD,CAAOF,KAAK,kBAAkBC,UAAW9C,KACzC,eAAC,KAAD,CAAO6C,KAAK,uBAAuBC,UAAWtC,KAE9C,eAAC,KAAD,CAAOqC,KAAK,qBAAqBC,UAAW/B,KAC5C,eAAC,KAAD,CAAO8B,KAAK,0BAA0BC,UAAWrB,KAEjD,eAAC,KAAD,CAAOoB,KAAK,mBAAmBC,UAAWH,UAG9C,eAAC,GAAD,QCrCNK,IAASC,OACP,eAAC,IAAD,CAAUzR,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFwN,SAASkE,eAAe,U","file":"static/js/main.4b6aa4b3.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n","\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n//cartItems are items which are already avaiable in user's cart\r\nexport const cartReducers = (state ={cartItems: [], shippingAddress: {}}, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload //item selected to put in cart\r\n            //checking if item already exist inside cart or not\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            //now item already present in cart, then removes that item from cart & adding new item which came from UI with action\r\n            if(existItem){ \r\n                return{\r\n                    ...state,//it means taking current state\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item] //if item is not present inside cart then, return cart & item together into cartItems\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n        }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload\r\n        }\r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems: []\r\n        }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default cartReducers\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\nexport const USER_LIST_LOGOUT = 'USER_LIST_LOGOUT'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {\r\n    productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productReviewCreateReducer,\r\n    productTopRatedReducer, productUpdateReducer,\r\n} from './reducers/productReducers'\r\nimport {cartReducers} from './reducers/cartReducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer} from './reducers/userReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    // it clarify that when action(productList) is called then this reducer(productListReducer) will run.\r\n    // 5.result transferred into reducer(productListReducer) will be kept by key(productList), and this key can be used on frontend.  \r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart:cartReducers,\r\n    \r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList :userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    \r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart:{ \r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin:{ userInfo: userInfoFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n//creating a store (one react app can have only 1 store)\r\n// 3rd argument of createStore is enhance store with third-party capabilities \r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n//getState() retrieve the current state of your Redux store\r\n//store.getState()\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\n\r\n\r\n// 4.this reducer is triggered, because this action(listProducts) was dispatched into reducer. Now every result will get stored into (productListReducer) \r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            //loading is made true in reducer in ‘ITEMS_REQUEST’ action type to indicate that items are loading,& data is still not received from the server.\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                products: action.payload.products, \r\n                page: action.payload.page, \r\n                pages: action.payload.pages\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            //loading is made true in reducer in ‘ITEMS_REQUEST’ action type to indicate that items are loading,& data is still not received from the server.\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }  \r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    \r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    //USER_LIST_LOGOUT,\r\n    \r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET   \r\n\r\n    \r\n\r\n } from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user:{} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user :{} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            //whenever profile is update set tha success=true\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { loading: false, success: true, order: action.payload }\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_PAY_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n        case ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n        USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST,\r\n        USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, //USER_UPDATE_PROFILE_RESET,\r\n        USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_LOGOUT, //USER_LIST_RESET,\r\n        USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS,\r\n        USER_UPDATE_FAIL,// USER_UPDATE_RESET\r\n\r\n } from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n export const login = (email, password) => async(dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers : {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            {'username':email, 'password':password},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET  })\r\n    dispatch({ type: USER_LIST_LOGOUT  })\r\n}\r\n\r\nexport const register = (name, email, password) => async(dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers : {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            {'name':name, 'email':email, 'password':password},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async(dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers : {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async(dispatch, getState) =>{\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        //to update our profile user must be logged in\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(\r\n            '/api/users/profile/update/',\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n        //once data is updated, user going to logged in with new data\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data)) //putting new data into localStorage(userInfo)\r\n    }\r\n    \r\n    catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Container, Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport SearchBox from './SearchBox'\r\n//using \"LinkContainer\" and \"to\" in code will help to swtich pages without reloading\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    \r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            { userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (<LinkContainer to=\"/login\">\r\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                 </LinkContainer>)\r\n                            }\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}      \r\n                            \r\n                            \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; ProShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=1?'fas fa-star':value>=0.5?'fas fa-star-half-alt':'far fa-star' \r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=2?'fas fa-star':value>=1.5?'fas fa-star-half-alt':'far fa-star' \r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=3?'fas fa-star':value>=2.5?'fas fa-star-half-alt':'far fa-star' \r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=4?'fas fa-star':value>=3.5?'fas fa-star-half-alt':'far fa-star' \r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value>=5?'fas fa-star':value>=4.5?'fas fa-star-half-alt':'far fa-star' \r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport {Card} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\n//using \"Link\" and \"to\" in code will help to swtich pages without reloading\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Product({product}) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounder\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image}></Card.Img>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                    </div>\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n//action carries payload\r\n//dispatch means to carry something to somewhere\r\n// 3.this action(listProducts) has been dispatched, to trigger this reducer(productListReducer)\r\nexport const listProducts = (keyword = '') => async(dispatch) =>{\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async(dispatch) =>{\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},//empty object is getting send because it is POST request\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, {useEffect} from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\nfunction HomeScreen({ history }) {\r\n    // 1.useDispatch is used to dispatch our action\r\n    const dispatch = useDispatch()\r\n    // 6.this (productList) is coming from store, which has three thing error, loading & products.\r\n    const productList = useSelector(state => state.productList)\r\n    //restructuring productList \r\n    const {error, loading, products, page, pages} = productList\r\n    \r\n    let keyword = history.location.search\r\n    // 2.useDispatch is calling action(listProducts)\r\n    useEffect(() =>{\r\n        //\"PRODUCT_LIST_REQUEST\"(\"type\") is ingested into listProducts, which will hit reducer having \"PRODUCT_LIST_REQUEST\"\r\n        dispatch(listProducts(keyword))\r\n    },[dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            <h1>Latest products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                    <Row>\r\n                        {products.map(product=>(\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, FormControl, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n    \r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() =>{\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    },[dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid/>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>   \r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Price: ${product.price}\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Description: {product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price:</Col>\r\n                                                <Col>\r\n                                                    <strong>${product.price}</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status:</Col>\r\n                                                <Col>\r\n                                                    {product.countInStock > 0 ?'In Stock':'Out of Stock'}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Qty</Col>\r\n                                                    <Col xs='auto' className='my-1'>\r\n                                                        <FormControl\r\n                                                            as=\"select\"\r\n                                                            value={qty}\r\n                                                            onChange={(e) => setQty(e.target.value)}\r\n                                                        >\r\n                                                            {\r\n                                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x+1} value={x+1}>\r\n                                                                        {x+1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                        </FormControl>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                            <Button\r\n                                                onClick={addToCartHandler} \r\n                                                className='btn-block'\r\n                                                disabled={product.countInStock===0} \r\n                                                type='button' >\r\n                                                Add to Cart\r\n                                            </Button>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h4>Reviews</h4>\r\n                                {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map((review) => (\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825' />\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <h4>Write a review</h4>\r\n\r\n                                        {loadingProductReview && <Loader />}\r\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={rating}\r\n                                                        onChange={(e) => setRating(e.target.value)}\r\n                                                    >\r\n                                                        <option value=''>Select...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - Good</option>\r\n                                                        <option value='4'>4 - Very Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Review</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        row='5'\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    ></Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Button\r\n                                                    disabled={loadingProductReview}\r\n                                                    type='submit'\r\n                                                    variant='primary'\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        </div>\r\n\r\n                    )\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) =>{\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        //type basically says which reducer going to be work\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type : CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n// data = paymentMethod\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, FormControl} from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nfunction CartScreen({match, location, history}) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    console.log(\"cartItems: \",cartItems)\r\n\r\n    useEffect(() =>{\r\n        dispatch(addToCart(productId, qty))\r\n\r\n    },[dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () =>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    console.log('qty:',qty)\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ):  (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}> {item.name} </Link>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <FormControl\r\n                                                as=\"select\"\r\n                                                value={qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x+1} value={x+1}>\r\n                                                        {x+1}\r\n                                                    </option>\r\n                                                    ))\r\n                                                }\r\n                                            </FormControl>\r\n                                        </Col>\r\n                                        <Col md={1}>\r\n                                            <Button \r\n                                                type='Button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc+item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc+item.qty*item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                style={{width: \"100%\"}}\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                    </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mt-2'>\r\n                    <Button type='submit' variant='primary'>\r\n                        Sign In\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"name = \",name,\" email = \", email, \" password = \",password);\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th>ID</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order=> (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td>{order._id}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt : (\r\n                                        <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL,\r\n    //ORDER_PAY_RESET, ORDER_LIST_MY_RESET, ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n        const { userLogin: {userInfo} } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","import React, { useState } from 'react'\r\n//import { useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    //if shipping address is not present redirect to shipping page\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions';\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        //this will run when order is placed\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item \r\n                                     className=\"px-md-10\"\r\n                            >\r\n                                <Button\r\n                                    style={{width: \"100%\"}}\r\n                                    type='button'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    // by writting setSdkReady(true), true will get assigned into sdkReady\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=ARigxH2AT0x3ZNdCqulkUURbqZEQ_X4SQ_jdhKrQptflgy7imxPN2maKxMiKDCcsx-iTyIau1oTO4e6O'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n    \r\n    //AcOvzoXYMvzkul7H6pgQRDScGUq57dVvcoKJQhwakaVTLirGJ9L2zNzB7Yts_zk9r8CbnNwxUOfwMyHn\r\n    //whenever something will change then useEffect will run\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } \r\n        else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                        {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        //if successfully updated the user\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //triggering productAction\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label style={{\"font-weight\": \"bold\"}}>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label style={{\"font-weight\": \"bold\"}}>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label style={{\"font-weight\": \"bold\"}}>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label style={{\"font-weight\": \"bold\"}}>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label style={{\"font-weight\": \"bold\"}}>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label style={{\"font-weight\": \"bold\"}}>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label style={{\"font-weight\": \"bold\"}}>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Button type='submit' variant='primary'>Update</Button>\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import {Container} from 'react-bootstrap';\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} exact />\r\n          <Route path='/register' component={RegisterScreen} exact />\r\n          <Route path='/profile' component={ProfileScreen} exact />\r\n          <Route path='/shipping' component={ShippingScreen} exact />\r\n          <Route path='/payment' component={PaymentScreen} exact />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} exact />\r\n          <Route path='/order/:id' component={OrderScreen} exact />\r\n          <Route path='/product/:id' component={ProductScreen} exact />\r\n          <Route path='/cart/:id?' component={CartScreen} exact />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\n\n//whenever something will change in App then redner function will be called. \nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}